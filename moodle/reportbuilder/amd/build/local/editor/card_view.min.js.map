{"version":3,"sources":["../../../src/local/editor/card_view.js"],"names":["cardViewForm","initCardViewForm","cardViewFormContainer","document","querySelector","reportSelectors","regions","settingsCardView","DynamicForm","addEventListener","events","FORM_SUBMITTED","event","preventDefault","then","addToast","catch","Notification","exception","init","initialized","reportEvents","publish","reportColumnsUpdated","reportElement","report","load","reportid","dataset","reportId"],"mappings":"shBAuBA,a,+DAEA,OAIA,OACA,OACA,O,4lBAEIA,CAAAA,CAAY,CAAG,I,CAKbC,CAAgB,CAAG,UAAM,CAC3B,GAAMC,CAAAA,CAAqB,CAAGC,QAAQ,CAACC,aAAT,CAAuBC,CAAe,CAACC,OAAhB,CAAwBC,gBAA/C,CAA9B,CACA,GAAI,CAACL,CAAL,CAA4B,CACxB,MACH,CACDF,CAAY,CAAG,GAAIQ,UAAJ,CAAgBN,CAAhB,CAAuC,uCAAvC,CAAf,CAEAF,CAAY,CAACS,gBAAb,CAA8BT,CAAY,CAACU,MAAb,CAAoBC,cAAlD,CAAkE,SAACC,CAAD,CAAW,CACzEA,CAAK,CAACC,cAAN,GAEA,iBAAU,uBAAV,CAAmC,oBAAnC,EACKC,IADL,CACUC,KADV,EAEKC,KAFL,CAEWC,UAAaC,SAFxB,CAGH,CAND,CAOH,C,CAOYC,CAAI,CAAG,SAACC,CAAD,CAAiB,CACjCnB,CAAgB,GAChB,GAAImB,CAAJ,CAAiB,CACb,MACH,CAGD,gBAAUC,CAAY,CAACC,OAAb,CAAqBC,oBAA/B,CAAqD,UAAM,CACvD,GAAMC,CAAAA,CAAa,CAAGrB,QAAQ,CAACC,aAAT,CAAuBC,CAAe,CAACC,OAAhB,CAAwBmB,MAA/C,CAAtB,CACAzB,CAAY,CAAC0B,IAAb,CAAkB,CAACC,QAAQ,CAAEH,CAAa,CAACI,OAAd,CAAsBC,QAAjC,CAAlB,CACH,CAHD,CAIH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder card view editor\n *\n * @module      core_reportbuilder/local/editor/card_view\n * @copyright   2021 Mikel Mart√≠n <mikel@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport DynamicForm from 'core_form/dynamicform';\nimport {add as addToast} from 'core/toast';\nimport {get_string as getString} from \"core/str\";\nimport {subscribe as subscribe} from 'core/pubsub';\nimport Notification from 'core/notification';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\n\nlet cardViewForm = null;\n\n/**\n * Initialise card view form, must be called on each init because the form container is re-created when switching editor modes\n */\nconst initCardViewForm = () => {\n    const cardViewFormContainer = document.querySelector(reportSelectors.regions.settingsCardView);\n    if (!cardViewFormContainer) {\n        return;\n    }\n    cardViewForm = new DynamicForm(cardViewFormContainer, '\\\\core_reportbuilder\\\\form\\\\card_view');\n\n    cardViewForm.addEventListener(cardViewForm.events.FORM_SUBMITTED, (event) => {\n        event.preventDefault();\n\n        getString('cardviewsettingssaved', 'core_reportbuilder')\n            .then(addToast)\n            .catch(Notification.exception);\n    });\n};\n\n/**\n * Initialise module\n *\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = (initialized) => {\n    initCardViewForm();\n    if (initialized) {\n        return;\n    }\n\n    // Update form each time a column is added or removed to the custom report.\n    subscribe(reportEvents.publish.reportColumnsUpdated, () => {\n        const reportElement = document.querySelector(reportSelectors.regions.report);\n        cardViewForm.load({reportid: reportElement.dataset.reportId});\n    });\n};\n"],"file":"card_view.min.js"}