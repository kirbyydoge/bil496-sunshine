{"version":3,"sources":["../../../src/local/editor/conditions.js"],"names":["reloadSettingsConditionsRegion","reportElement","templateContext","pendingPromise","Pending","settingsConditionsRegion","querySelector","reportSelectors","regions","settingsConditions","Templates","renderForPromise","conditions","then","html","js","replaceNode","javascript","reportAddCondition","actions","focus","initConditionsForm","resolve","document","report","conditionFormContainer","conditionForm","DynamicForm","addEventListener","events","FORM_SUBMITTED","event","preventDefault","addToast","catch","Notification","exception","reportEvents","tableReload","NOSUBMIT_BUTTON_PRESSED","saveCancelPromise","triggerElement","detail","dataset","reportId","data","init","initialized","target","closest","value","options","selectedIndex","text","reportRemoveCondition","conditionContainer","activeCondition","conditionName","conditionId","activeConditionsSortableList","SortableList","activeConditions","isHorizontal","getElementName","element","Promise","on","EVENTS","DROP","info","positionChanged","conditionPosition","targetConditionPosition","targetNextElement","siblings","length"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder conditions editor\n *\n * @module      core_reportbuilder/local/editor/conditions\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport SortableList from 'core/sortable_list';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport {add as addToast} from 'core/toast';\nimport DynamicForm from 'core_form/dynamicform';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {addCondition, deleteCondition, reorderCondition, resetConditions} from 'core_reportbuilder/local/repository/conditions';\n\n/**\n * Reload conditions settings region\n *\n * @param {Element} reportElement\n * @param {Object} templateContext\n * @return {Promise}\n */\nconst reloadSettingsConditionsRegion = (reportElement, templateContext) => {\n    const pendingPromise = new Pending('core_reportbuilder/conditions:reload');\n    const settingsConditionsRegion = reportElement.querySelector(reportSelectors.regions.settingsConditions);\n\n    return Templates.renderForPromise('core_reportbuilder/local/settings/conditions', {conditions: templateContext})\n        .then(({html, js}) => {\n            Templates.replaceNode(settingsConditionsRegion, html, js + templateContext.javascript);\n            // Re-focus the add condition element after reloading the region.\n            const reportAddCondition = reportElement.querySelector(reportSelectors.actions.reportAddCondition);\n            reportAddCondition?.focus();\n            initConditionsForm(reportElement);\n            return pendingPromise.resolve();\n        });\n};\n\n/**\n * Initialise conditions form, must be called on each init because the form container is re-created when switching editor modes\n */\nconst initConditionsForm = () => {\n    // Handle dynamic conditions form.\n    const reportElement = document.querySelector(reportSelectors.regions.report);\n    const conditionFormContainer = reportElement.querySelector(reportSelectors.regions.settingsConditions);\n    if (!conditionFormContainer) {\n        return;\n    }\n    const conditionForm = new DynamicForm(conditionFormContainer, '\\\\core_reportbuilder\\\\form\\\\condition');\n\n    // Submit report conditions.\n    conditionForm.addEventListener(conditionForm.events.FORM_SUBMITTED, event => {\n        event.preventDefault();\n\n        getString('conditionsapplied', 'core_reportbuilder')\n            .then(addToast)\n            .catch(Notification.exception);\n\n        // After the form has been submitted, we should trigger report table reload.\n        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n    });\n\n    // Reset report conditions.\n    conditionForm.addEventListener(conditionForm.events.NOSUBMIT_BUTTON_PRESSED, event => {\n        event.preventDefault();\n\n        Notification.saveCancelPromise(\n            getString('resetconditions', 'core_reportbuilder'),\n            getString('resetconditionsconfirm', 'core_reportbuilder'),\n            getString('resetall', 'core_reportbuilder'),\n            {triggerElement: event.detail}\n        ).then(() => {\n            const pendingPromise = new Pending('core_reportbuilder/conditions:reset');\n\n            return resetConditions(reportElement.dataset.reportId)\n                .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                .then(() => addToast(getString('conditionsreset', 'core_reportbuilder')))\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }).catch(() => {\n            return;\n        });\n    });\n};\n\n/**\n * Initialise module, prefetch all required strings\n *\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = initialized => {\n    prefetchStrings('core_reportbuilder', [\n        'conditionadded',\n        'conditiondeleted',\n        'conditionmoved',\n        'conditionsapplied',\n        'conditionsreset',\n        'deletecondition',\n        'deleteconditionconfirm',\n        'resetall',\n        'resetconditions',\n        'resetconditionsconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n    ]);\n\n    initConditionsForm();\n    if (initialized) {\n        return;\n    }\n\n    document.addEventListener('click', event => {\n\n        // Add condition to report.\n        const reportAddCondition = event.target.closest(reportSelectors.actions.reportAddCondition);\n        if (reportAddCondition) {\n            event.preventDefault();\n\n            const reportElement = reportAddCondition.closest(reportSelectors.regions.report);\n\n            // Check if dropdown is closed with no condition selected.\n            if (reportAddCondition.value === '0') {\n                return;\n            }\n\n            const pendingPromise = new Pending('core_reportbuilder/conditions:add');\n\n            addCondition(reportElement.dataset.reportId, reportAddCondition.value)\n                .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                .then(() => getString('conditionadded', 'core_reportbuilder',\n                    reportAddCondition.options[reportAddCondition.selectedIndex].text))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n\n        // Remove condition from report.\n        const reportRemoveCondition = event.target.closest(reportSelectors.actions.reportRemoveCondition);\n        if (reportRemoveCondition) {\n            event.preventDefault();\n\n            const reportElement = reportRemoveCondition.closest(reportSelectors.regions.report);\n            const conditionContainer = reportRemoveCondition.closest(reportSelectors.regions.activeCondition);\n            const conditionName = conditionContainer.dataset.conditionName;\n\n            Notification.saveCancelPromise(\n                getString('deletecondition', 'core_reportbuilder', conditionName),\n                getString('deleteconditionconfirm', 'core_reportbuilder', conditionName),\n                getString('delete', 'core'),\n                {triggerElement: reportRemoveCondition}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/conditions:remove');\n\n                return deleteCondition(reportElement.dataset.reportId, conditionContainer.dataset.conditionId)\n                    .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                    .then(() => addToast(getString('conditiondeleted', 'core_reportbuilder', conditionName)))\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    // Initialize sortable list to handle active conditions moving (note JQuery dependency, see MDL-72293 for resolution).\n    var activeConditionsSortableList = new SortableList(`${reportSelectors.regions.activeConditions}`,\n        {isHorizontal: false});\n    activeConditionsSortableList.getElementName = element => Promise.resolve(element.data('conditionName'));\n\n    $(document).on(SortableList.EVENTS.DROP, reportSelectors.regions.activeCondition, (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_reportbuilder/conditions:reorder');\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const conditionId = info.element.data('conditionId');\n            const conditionPosition = info.element.data('conditionPosition');\n\n            // Select target position, if moving to the end then count number of element siblings.\n            let targetConditionPosition = info.targetNextElement.data('conditionPosition') || info.element.siblings().length + 2;\n            if (targetConditionPosition > conditionPosition) {\n                targetConditionPosition--;\n            }\n\n            reorderCondition(reportElement.dataset.reportId, conditionId, targetConditionPosition)\n                .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                .then(() => getString('conditionmoved', 'core_reportbuilder', info.element.data('conditionName')))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n    });\n};\n"],"file":"conditions.min.js"}