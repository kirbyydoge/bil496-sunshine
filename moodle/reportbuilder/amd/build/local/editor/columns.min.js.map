{"version":3,"sources":["../../../src/local/editor/columns.js"],"names":["init","initialized","document","addEventListener","event","reportAddColumn","target","closest","reportSelectors","actions","preventDefault","pendingPromise","Pending","reportElement","regions","report","dataset","reportId","uniqueIdentifier","then","data","reportEvents","publish","reportColumnsUpdated","name","addToast","tableReload","preservePagination","resolve","catch","Notification","exception","reportRemoveColumn","columnHeader","columnName","saveCancelPromise","triggerElement","columnId","columnSortableList","SortableList","reportTable","isHorizontal","getElementName","element","Promise","on","EVENTS","DRAG","info","columnPosition","targetColumnPosition","targetNextElement","find","each","cell","children","beforeCell","insertBefore","appendChild","DROP","positionChanged","siblings","length","inplaceEditableEvents","elementUpdated","columnAggregation","columnAggregationLink","itemid","preserveTriggerElement"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder columns editor\n *\n * @module      core_reportbuilder/local/editor/columns\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport {eventTypes as inplaceEditableEvents} from 'core/local/inplace_editable/events';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport {publish} from 'core/pubsub';\nimport SortableList from 'core/sortable_list';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {addColumn, deleteColumn, reorderColumn} from 'core_reportbuilder/local/repository/columns';\nimport {getColumnSorting} from 'core_reportbuilder/local/repository/sorting';\n\n/**\n * Initialise module, prefetch all required strings\n *\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = initialized => {\n    prefetchStrings('core_reportbuilder', [\n        'columnadded',\n        'columnaggregated',\n        'columndeleted',\n        'columnmoved',\n        'deletecolumn',\n        'deletecolumnconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n    ]);\n\n    if (initialized) {\n        return;\n    }\n\n    document.addEventListener('click', event => {\n\n        // Add column to report.\n        const reportAddColumn = event.target.closest(reportSelectors.actions.reportAddColumn);\n        if (reportAddColumn) {\n            event.preventDefault();\n\n            const pendingPromise = new Pending('core_reportbuilder/columns:add');\n            const reportElement = reportAddColumn.closest(reportSelectors.regions.report);\n\n            addColumn(reportElement.dataset.reportId, reportAddColumn.dataset.uniqueIdentifier)\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                .then(() => getString('columnadded', 'core_reportbuilder', reportAddColumn.dataset.name))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n\n        // Remove column from report.\n        const reportRemoveColumn = event.target.closest(reportSelectors.actions.reportRemoveColumn);\n        if (reportRemoveColumn) {\n            event.preventDefault();\n\n            const reportElement = reportRemoveColumn.closest(reportSelectors.regions.report);\n            const columnHeader = reportRemoveColumn.closest(reportSelectors.regions.columnHeader);\n            const columnName = columnHeader.dataset.columnName;\n\n            Notification.saveCancelPromise(\n                getString('deletecolumn', 'core_reportbuilder', columnName),\n                getString('deletecolumnconfirm', 'core_reportbuilder', columnName),\n                getString('delete', 'core'),\n                {triggerElement: reportRemoveColumn}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/columns:remove');\n\n                return deleteColumn(reportElement.dataset.reportId, columnHeader.dataset.columnId)\n                    .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                    .then(() => addToast(getString('columndeleted', 'core_reportbuilder', columnName)))\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    // Initialize sortable list to handle column moving (note JQuery dependency, see MDL-72293 for resolution).\n    var columnSortableList = new SortableList(`${reportSelectors.regions.reportTable} thead tr`, {isHorizontal: true});\n    columnSortableList.getElementName = element => Promise.resolve(element.data('columnName'));\n\n    $(document).on(SortableList.EVENTS.DRAG, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\n        const reportElement = event.target.closest(reportSelectors.regions.report);\n        const columnPosition = info.element.data('columnPosition');\n        const targetColumnPosition = info.targetNextElement.data('columnPosition');\n\n        $(reportElement).find('tbody tr').each(function() {\n            const cell = $(this).children(`td.c${columnPosition - 1}`)[0];\n            if (targetColumnPosition) {\n                var beforeCell = $(this).children(`td.c${targetColumnPosition - 1}`)[0];\n                this.insertBefore(cell, beforeCell);\n            } else {\n                this.appendChild(cell);\n            }\n        });\n    });\n\n    $(document).on(SortableList.EVENTS.DROP, `${reportSelectors.regions.report} th[data-column-id]`, (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_reportbuilder/columns:reorder');\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const columnId = info.element.data('columnId');\n            const columnName = info.element.data('columnName');\n            const columnPosition = info.element.data('columnPosition');\n\n            // Select target position, if moving to the end then count number of element siblings.\n            let targetColumnPosition = info.targetNextElement.data('columnPosition') || info.element.siblings().length + 2;\n            if (targetColumnPosition > columnPosition) {\n                targetColumnPosition--;\n            }\n\n            reorderColumn(reportElement.dataset.reportId, columnId, targetColumnPosition)\n                .then(() => getString('columnmoved', 'core_reportbuilder', columnName))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n    });\n\n    // Initialize inplace editable listeners for column aggregation.\n    document.addEventListener(inplaceEditableEvents.elementUpdated, event => {\n\n        const columnAggregation = event.target.closest('[data-itemtype=\"columnaggregation\"]');\n        if (columnAggregation) {\n            const pendingPromise = new Pending('core_reportbuilder/columns:aggregate');\n            const reportElement = columnAggregation.closest(reportSelectors.regions.report);\n            const columnHeader = columnAggregation.closest(reportSelectors.regions.columnHeader);\n\n            getString('columnaggregated', 'core_reportbuilder', columnHeader.dataset.columnName)\n                .then(addToast)\n                .then(() => {\n                    // Pass preserveTriggerElement parameter so columnAggregationLink will be focused after the report reload.\n                    const columnAggregationLink = `[data-itemtype=\"columnaggregation\"][data-itemid=\"`\n                        + `${columnAggregation.dataset.itemid}\"] > a`;\n\n                    // Now reload the table, and notify listeners that columns have been updated.\n                    dispatchEvent(reportEvents.tableReload, {preserveTriggerElement: columnAggregationLink}, reportElement);\n                    return getColumnSorting(reportElement.dataset.reportId);\n                })\n                .then(data => publish(reportEvents.publish.reportColumnsUpdated, data))\n                .then(() => pendingPromise.resolve())\n                .catch(Notification.exception);\n        }\n    });\n};\n"],"file":"columns.min.js"}