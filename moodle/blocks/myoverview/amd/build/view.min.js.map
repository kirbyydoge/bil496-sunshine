{"version":3,"sources":["../src/view.js"],"names":["TEMPLATES","COURSES_CARDS","COURSES_LIST","COURSES_SUMMARY","NOCOURSES","GROUPINGS","GROUPING_ALLINCLUDINGHIDDEN","GROUPING_ALL","GROUPING_INPROGRESS","GROUPING_FUTURE","GROUPING_PAST","GROUPING_FAVOURITES","GROUPING_HIDDEN","NUMCOURSES_PERPAGE","loadedPages","courseOffset","lastPage","lastLimit","namespace","getFilterValues","root","courseRegion","find","SELECTORS","courseView","region","display","attr","grouping","sort","displaycategories","customfieldname","customfieldvalue","DEFAULT_PAGED_CONTENT_CONFIG","ignoreControlWhileLoading","controlPlacementBottom","persistentLimitKey","getMyCourses","filters","limit","Repository","getEnrolledCoursesByTimeline","offset","classification","getSearchMyCourses","searchValue","searchvalue","getFavouriteIconContainer","courseId","FAVOURITE_ICON","getPagedContentContainer","index","getCourseId","hideFavouriteIcon","iconContainer","isFavouriteIcon","ICON_IS_FAVOURITE","addClass","Aria","hide","notFavourteIcon","ICON_NOT_FAVOURITE","removeClass","unhide","showFavouriteIcon","getAddFavouriteMenuItem","getRemoveFavouriteMenuItem","addToFavourites","removeAction","addAction","setCourseFavouriteState","then","success","PubSub","publish","CourseEvents","favorited","Notification","alert","catch","exception","removeFromFavourites","unfavorited","getHideCourseMenuItem","getShowCourseMenuItem","hideCourse","hideAction","showAction","setCourseHiddenState","hideElement","showCourse","status","updateUserPreferences","preferences","type","value","id","pagingBar","jumpto","parseInt","courseList","reducedCourse","courses","reduce","accumulator","current","push","newElement","slice","forEach","popElement","length","pagedContentContainer","PagedContentFactory","resetLastPageNumber","pagedContentPage","renderCourses","html","js","Templates","replaceNodeContents","page","remove","setFavouriteCourses","result","warnings","course","isfavourite","noCoursesRender","nocoursesimg","newcourseurl","render","coursesData","currentTemplate","Array","isArray","Object","values","map","showcoursecategory","setLimit","registerPagedEventHandlers","event","PagedContentEvents","SET_ITEMS_PER_PAGE_LIMIT","subscribe","itemsPerPageFunc","pagingLimit","itemsPerPage","active","totalCourseCount","filter","pagingOption","pageBuilder","currentPage","pageData","actions","activeSearch","nextPageStart","pageCourses","currentPageLength","remainingCourses","allItemsLoaded","nextoffset","resetGlobals","standardFunctionalityCurry","promises","pagePromise","searchFunctionalityCurry","inputValue","searchingPromise","initializePagedContent","promiseFunction","config","eventNamespace","pagedContentPromise","createWithLimit","pagesData","pageNumber","registerEventListeners","CustomEvents","define","events","activate","on","ACTION_ADD_FAVOURITE","e","data","favourite","target","closest","originalEvent","preventDefault","ACTION_REMOVE_FAVOURITE","ACTION_HIDE_COURSE","ACTION_SHOW_COURSE","input","querySelector","searchInput","clearIcon","addEventListener","focus","clearSearch","trim","classList","add","init","document","selectBlock","Math","random","reset"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the courses view for the overview block.\n *\n * @copyright  2018 Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Repository from 'block_myoverview/repository';\nimport * as PagedContentFactory from 'core/paged_content_factory';\nimport * as PubSub from 'core/pubsub';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport * as Notification from 'core/notification';\nimport * as Templates from 'core/templates';\nimport * as CourseEvents from 'core_course/events';\nimport SELECTORS from 'block_myoverview/selectors';\nimport * as PagedContentEvents from 'core/paged_content_events';\nimport * as Aria from 'core/aria';\nimport {debounce} from 'core/utils';\n\nconst TEMPLATES = {\n    COURSES_CARDS: 'block_myoverview/view-cards',\n    COURSES_LIST: 'block_myoverview/view-list',\n    COURSES_SUMMARY: 'block_myoverview/view-summary',\n    NOCOURSES: 'core_course/no-courses'\n};\n\nconst GROUPINGS = {\n    GROUPING_ALLINCLUDINGHIDDEN: 'allincludinghidden',\n    GROUPING_ALL: 'all',\n    GROUPING_INPROGRESS: 'inprogress',\n    GROUPING_FUTURE: 'future',\n    GROUPING_PAST: 'past',\n    GROUPING_FAVOURITES: 'favourites',\n    GROUPING_HIDDEN: 'hidden'\n};\n\nconst NUMCOURSES_PERPAGE = [12, 24, 48, 96, 0];\n\nlet loadedPages = [];\n\nlet courseOffset = 0;\n\nlet lastPage = 0;\n\nlet lastLimit = 0;\n\nlet namespace = null;\n\n/**\n * Get filter values from DOM.\n *\n * @param {object} root The root element for the courses view.\n * @return {filters} Set filters.\n */\nconst getFilterValues = root => {\n    const courseRegion = root.find(SELECTORS.courseView.region);\n    return {\n        display: courseRegion.attr('data-display'),\n        grouping: courseRegion.attr('data-grouping'),\n        sort: courseRegion.attr('data-sort'),\n        displaycategories: courseRegion.attr('data-displaycategories'),\n        customfieldname: courseRegion.attr('data-customfieldname'),\n        customfieldvalue: courseRegion.attr('data-customfieldvalue'),\n    };\n};\n\n// We want the paged content controls below the paged content area.\n// and the controls should be ignored while data is loading.\nconst DEFAULT_PAGED_CONTENT_CONFIG = {\n    ignoreControlWhileLoading: true,\n    controlPlacementBottom: true,\n    persistentLimitKey: 'block_myoverview_user_paging_preference'\n};\n\n/**\n * Get enrolled courses from backend.\n *\n * @param {object} filters The filters for this view.\n * @param {int} limit The number of courses to show.\n * @return {promise} Resolved with an array of courses.\n */\nconst getMyCourses = (filters, limit) => {\n    return Repository.getEnrolledCoursesByTimeline({\n        offset: courseOffset,\n        limit: limit,\n        classification: filters.grouping,\n        sort: filters.sort,\n        customfieldname: filters.customfieldname,\n        customfieldvalue: filters.customfieldvalue\n    });\n};\n\n/**\n * Search for enrolled courses from backend.\n *\n * @param {object} filters The filters for this view.\n * @param {int} limit The number of courses to show.\n * @param {string} searchValue What does the user want to search within their courses.\n * @return {promise} Resolved with an array of courses.\n */\nconst getSearchMyCourses = (filters, limit, searchValue) => {\n    return Repository.getEnrolledCoursesByTimeline({\n        offset: courseOffset,\n        limit: limit,\n        classification: 'search',\n        sort: filters.sort,\n        customfieldname: filters.customfieldname,\n        customfieldvalue: filters.customfieldvalue,\n        searchvalue: searchValue\n    });\n};\n\n/**\n * Get the container element for the favourite icon.\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n * @return {Object} The favourite icon container\n */\nconst getFavouriteIconContainer = (root, courseId) => {\n    return root.find(SELECTORS.FAVOURITE_ICON + '[data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Get the paged content container element.\n *\n * @param {Object} root The course overview container\n * @param {Number} index Rendered page index.\n * @return {Object} The rendered paged container.\n */\nconst getPagedContentContainer = (root, index) => {\n    return root.find('[data-region=\"paged-content-page\"][data-page=\"' + index + '\"]');\n};\n\n/**\n * Get the course id from a favourite element.\n *\n * @param {Object} root The favourite icon container element.\n * @return {Number} Course id.\n */\nconst getCourseId = root => {\n    return root.attr('data-course-id');\n};\n\n/**\n * Hide the favourite icon.\n *\n * @param {Object} root The favourite icon container element.\n * @param {Number} courseId Course id number.\n */\nconst hideFavouriteIcon = (root, courseId) => {\n    const iconContainer = getFavouriteIconContainer(root, courseId);\n\n    const isFavouriteIcon = iconContainer.find(SELECTORS.ICON_IS_FAVOURITE);\n    isFavouriteIcon.addClass('hidden');\n    Aria.hide(isFavouriteIcon);\n\n    const notFavourteIcon = iconContainer.find(SELECTORS.ICON_NOT_FAVOURITE);\n    notFavourteIcon.removeClass('hidden');\n    Aria.unhide(notFavourteIcon);\n};\n\n/**\n * Show the favourite icon.\n *\n * @param {Object} root The course overview container.\n * @param {Number} courseId Course id number.\n */\nconst showFavouriteIcon = (root, courseId) => {\n    const iconContainer = getFavouriteIconContainer(root, courseId);\n\n    const isFavouriteIcon = iconContainer.find(SELECTORS.ICON_IS_FAVOURITE);\n    isFavouriteIcon.removeClass('hidden');\n    Aria.unhide(isFavouriteIcon);\n\n    const notFavourteIcon = iconContainer.find(SELECTORS.ICON_NOT_FAVOURITE);\n    notFavourteIcon.addClass('hidden');\n    Aria.hide(notFavourteIcon);\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The add to favourite menu item.\n */\nconst getAddFavouriteMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"add-favourite\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The remove from favourites menu item.\n */\nconst getRemoveFavouriteMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"remove-favourite\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Add course to favourites\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst addToFavourites = (root, courseId) => {\n    const removeAction = getRemoveFavouriteMenuItem(root, courseId);\n    const addAction = getAddFavouriteMenuItem(root, courseId);\n\n    setCourseFavouriteState(courseId, true).then(success => {\n        if (success) {\n            PubSub.publish(CourseEvents.favorited, courseId);\n            removeAction.removeClass('hidden');\n            addAction.addClass('hidden');\n            showFavouriteIcon(root, courseId);\n        } else {\n            Notification.alert('Starring course failed', 'Could not change favourite state');\n        }\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Remove course from favourites\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst removeFromFavourites = (root, courseId) => {\n    const removeAction = getRemoveFavouriteMenuItem(root, courseId);\n    const addAction = getAddFavouriteMenuItem(root, courseId);\n\n    setCourseFavouriteState(courseId, false).then(success => {\n        if (success) {\n            PubSub.publish(CourseEvents.unfavorited, courseId);\n            removeAction.addClass('hidden');\n            addAction.removeClass('hidden');\n            hideFavouriteIcon(root, courseId);\n        } else {\n            Notification.alert('Starring course failed', 'Could not change favourite state');\n        }\n        return;\n    }).catch(Notification.exception);\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The hide course menu item.\n */\nconst getHideCourseMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"hide-course\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Get the action menu item\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id.\n * @return {Object} The show course menu item.\n */\nconst getShowCourseMenuItem = (root, courseId) => {\n    return root.find('[data-action=\"show-course\"][data-course-id=\"' + courseId + '\"]');\n};\n\n/**\n * Hide course\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst hideCourse = (root, courseId) => {\n    const hideAction = getHideCourseMenuItem(root, courseId);\n    const showAction = getShowCourseMenuItem(root, courseId);\n    const filters = getFilterValues(root);\n\n    setCourseHiddenState(courseId, true);\n\n    // Remove the course from this view as it is now hidden and thus not covered by this view anymore.\n    // Do only if we are not in \"All (including archived)\" view mode where really all courses are shown.\n    if (filters.grouping !== GROUPINGS.GROUPING_ALLINCLUDINGHIDDEN) {\n        hideElement(root, courseId);\n    }\n\n    hideAction.addClass('hidden');\n    showAction.removeClass('hidden');\n};\n\n/**\n * Show course\n *\n * @param {Object} root The course overview container\n * @param {Number} courseId Course id number\n */\nconst showCourse = (root, courseId) => {\n    const hideAction = getHideCourseMenuItem(root, courseId);\n    const showAction = getShowCourseMenuItem(root, courseId);\n    const filters = getFilterValues(root);\n\n    setCourseHiddenState(courseId, null);\n\n    // Remove the course from this view as it is now shown again and thus not covered by this view anymore.\n    // Do only if we are not in \"All (including archived)\" view mode where really all courses are shown.\n    if (filters.grouping !== GROUPINGS.GROUPING_ALLINCLUDINGHIDDEN) {\n        hideElement(root, courseId);\n    }\n\n    hideAction.removeClass('hidden');\n    showAction.addClass('hidden');\n};\n\n/**\n * Set the courses hidden status and push to repository\n *\n * @param {Number} courseId Course id to favourite.\n * @param {Boolean} status new hidden status.\n * @return {Promise} Repository promise.\n */\nconst setCourseHiddenState = (courseId, status) => {\n\n    // If the given status is not hidden, the preference has to be deleted with a null value.\n    if (status === false) {\n        status = null;\n    }\n    return Repository.updateUserPreferences({\n        preferences: [\n            {\n                type: 'block_myoverview_hidden_course_' + courseId,\n                value: status\n            }\n        ]\n    });\n};\n\n/**\n * Reset the loadedPages dataset to take into account the hidden element\n *\n * @param {Object} root The course overview container\n * @param {Number} id The course id number\n */\nconst hideElement = (root, id) => {\n    const pagingBar = root.find('[data-region=\"paging-bar\"]');\n    const jumpto = parseInt(pagingBar.attr('data-active-page-number'));\n\n    // Get a reduced dataset for the current page.\n    const courseList = loadedPages[jumpto];\n    let reducedCourse = courseList.courses.reduce((accumulator, current) => {\n        if (+id !== +current.id) {\n            accumulator.push(current);\n        }\n        return accumulator;\n    }, []);\n\n    // Get the next page's data if loaded and pop the first element from it.\n    if (typeof (loadedPages[jumpto + 1]) !== 'undefined') {\n        const newElement = loadedPages[jumpto + 1].courses.slice(0, 1);\n\n        // Adjust the dataset for the reset of the pages that are loaded.\n        loadedPages.forEach((courseList, index) => {\n            if (index > jumpto) {\n                let popElement = [];\n                if (typeof (loadedPages[index + 1]) !== 'undefined') {\n                    popElement = loadedPages[index + 1].courses.slice(0, 1);\n                }\n                loadedPages[index].courses = [...loadedPages[index].courses.slice(1), ...popElement];\n            }\n        });\n\n        reducedCourse = [...reducedCourse, ...newElement];\n    }\n\n    // Check if the next page is the last page and if it still has data associated to it.\n    if (lastPage === jumpto + 1 && loadedPages[jumpto + 1].courses.length === 0) {\n        const pagedContentContainer = root.find('[data-region=\"paged-content-container\"]');\n        PagedContentFactory.resetLastPageNumber($(pagedContentContainer).attr('id'), jumpto);\n    }\n\n    loadedPages[jumpto].courses = reducedCourse;\n\n    // Reduce the course offset.\n    courseOffset--;\n\n    // Render the paged content for the current.\n    const pagedContentPage = getPagedContentContainer(root, jumpto);\n    renderCourses(root, loadedPages[jumpto]).then((html, js) => {\n        return Templates.replaceNodeContents(pagedContentPage, html, js);\n    }).catch(Notification.exception);\n\n    // Delete subsequent pages in order to trigger the callback.\n    loadedPages.forEach((courseList, index) => {\n        if (index > jumpto) {\n            const page = getPagedContentContainer(root, index);\n            page.remove();\n        }\n    });\n};\n\n/**\n * Set the courses favourite status and push to repository\n *\n * @param {Number} courseId Course id to favourite.\n * @param {boolean} status new favourite status.\n * @return {Promise} Repository promise.\n */\nconst setCourseFavouriteState = (courseId, status) => {\n\n    return Repository.setFavouriteCourses({\n        courses: [\n            {\n                'id': courseId,\n                'favourite': status\n            }\n        ]\n    }).then(result => {\n        if (result.warnings.length === 0) {\n            loadedPages.forEach(courseList => {\n                courseList.courses.forEach((course, index) => {\n                    if (course.id === courseId) {\n                        courseList.courses[index].isfavourite = status;\n                    }\n                });\n            });\n            return true;\n        } else {\n            return false;\n        }\n    }).catch(Notification.exception);\n};\n\n/**\n * Given there are no courses to render provide the rendered template.\n *\n * @param {object} root The root element for the courses view.\n * @return {promise} jQuery promise resolved after rendering is complete.\n */\nconst noCoursesRender = root => {\n    const nocoursesimg = root.find(SELECTORS.courseView.region).attr('data-nocoursesimg');\n    const newcourseurl = root.find(SELECTORS.courseView.region).attr('data-newcourseurl');\n    return Templates.render(TEMPLATES.NOCOURSES, {\n        nocoursesimg: nocoursesimg,\n        newcourseurl: newcourseurl\n    });\n};\n\n/**\n * Render the dashboard courses.\n *\n * @param {object} root The root element for the courses view.\n * @param {array} coursesData containing array of returned courses.\n * @return {promise} jQuery promise resolved after rendering is complete.\n */\nconst renderCourses = (root, coursesData) => {\n\n    const filters = getFilterValues(root);\n\n    let currentTemplate = '';\n    if (filters.display === 'card') {\n        currentTemplate = TEMPLATES.COURSES_CARDS;\n    } else if (filters.display === 'list') {\n        currentTemplate = TEMPLATES.COURSES_LIST;\n    } else {\n        currentTemplate = TEMPLATES.COURSES_SUMMARY;\n    }\n\n    if (!coursesData) {\n        return noCoursesRender(root);\n    } else {\n        // Sometimes we get weird objects coming after a failed search, cast to ensure typing functions.\n        if (Array.isArray(coursesData.courses) === false) {\n            coursesData.courses = Object.values(coursesData.courses);\n        }\n        // Whether the course category should be displayed in the course item.\n        coursesData.courses = coursesData.courses.map(course => {\n            course.showcoursecategory = filters.displaycategories === 'on';\n            return course;\n        });\n        if (coursesData.courses.length) {\n            return Templates.render(currentTemplate, {\n                courses: coursesData.courses,\n            });\n        } else {\n            return noCoursesRender(root);\n        }\n    }\n};\n\n/**\n * Return the callback to be passed to the subscribe event\n *\n * @param {object} root The root element for the courses view\n * @return {function} Partially applied function that'll execute when passed a limit\n */\nconst setLimit = root => {\n    // @param {Number} limit The paged limit that is passed through the event.\n    return limit => root.find(SELECTORS.courseView.region).attr('data-paging', limit);\n};\n\n/**\n * Intialise the paged list and cards views on page load.\n * Returns an array of paged contents that we would like to handle here\n *\n * @param {object} root The root element for the courses view\n * @param {string} namespace The namespace for all the events attached\n */\nconst registerPagedEventHandlers = (root, namespace) => {\n    const event = namespace + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;\n    PubSub.subscribe(event, setLimit(root));\n};\n\n/**\n * Figure out how many items are going to be allowed to be rendered in the block.\n *\n * @param  {Number} pagingLimit How many courses to display\n * @param  {Object} root The course overview container\n * @return {Number[]} How many courses will be rendered\n */\nconst itemsPerPageFunc = (pagingLimit, root) => {\n    let itemsPerPage = NUMCOURSES_PERPAGE.map(value => {\n        let active = false;\n        if (value === pagingLimit) {\n            active = true;\n        }\n\n        return {\n            value: value,\n            active: active\n        };\n    });\n\n    // Filter out all pagination options which are too large for the amount of courses user is enrolled in.\n    const totalCourseCount = parseInt(root.find(SELECTORS.courseView.region).attr('data-totalcoursecount'), 10);\n    return itemsPerPage.filter(pagingOption => {\n        return pagingOption.value < totalCourseCount || pagingOption.value === 0;\n    });\n};\n\n/**\n * Mutates and controls the loadedPages array and handles the bootstrapping.\n *\n * @param {Array|Object} coursesData Array of all of the courses to start building the page from\n * @param {Number} currentPage What page are we currently on?\n * @param {Object} pageData Any current page information\n * @param {Object} actions Paged content helper\n * @param {null|boolean} activeSearch Are we currently actively searching and building up search results?\n */\nconst pageBuilder = (coursesData, currentPage, pageData, actions, activeSearch = null) => {\n    // If the courseData comes in an object then get the value otherwise it is a pure array.\n    let courses = coursesData.courses ? coursesData.courses : coursesData;\n    let nextPageStart = 0;\n    let pageCourses = [];\n\n    // If current page's data is loaded make sure we max it to page limit.\n    if (typeof (loadedPages[currentPage]) !== 'undefined') {\n        pageCourses = loadedPages[currentPage].courses;\n        const currentPageLength = pageCourses.length;\n        if (currentPageLength < pageData.limit) {\n            nextPageStart = pageData.limit - currentPageLength;\n            pageCourses = {...loadedPages[currentPage].courses, ...courses.slice(0, nextPageStart)};\n        }\n    } else {\n        // When the page limit is zero, there is only one page of courses, no start for next page.\n        nextPageStart = pageData.limit || false;\n        pageCourses = (pageData.limit > 0) ? courses.slice(0, pageData.limit) : courses;\n    }\n\n    // Finished setting up the current page.\n    loadedPages[currentPage] = {\n        courses: pageCourses\n    };\n\n    // Set up the next page (if there is more than one page).\n    const remainingCourses = nextPageStart !== false ? courses.slice(nextPageStart, courses.length) : [];\n    if (remainingCourses.length) {\n        loadedPages[currentPage + 1] = {\n            courses: remainingCourses\n        };\n    }\n\n    // Set the last page to either the current or next page.\n    if (loadedPages[currentPage].courses.length < pageData.limit || !remainingCourses.length) {\n        lastPage = currentPage;\n        if (activeSearch === null) {\n            actions.allItemsLoaded(currentPage);\n        }\n    } else if (typeof (loadedPages[currentPage + 1]) !== 'undefined'\n        && loadedPages[currentPage + 1].courses.length < pageData.limit) {\n        lastPage = currentPage + 1;\n    }\n\n    courseOffset = coursesData.nextoffset;\n};\n\n/**\n * In cases when switching between regular rendering and search rendering we need to reset some variables.\n */\nconst resetGlobals = () => {\n    courseOffset = 0;\n    loadedPages = [];\n    lastPage = 0;\n    lastLimit = 0;\n};\n\n/**\n * The default functionality of fetching paginated courses without special handling.\n *\n * @return {function(Object, Object, Object, Object, Object, Promise, Number): void}\n */\nconst standardFunctionalityCurry = () => {\n    resetGlobals();\n    return (filters, currentPage, pageData, actions, root, promises, limit) => {\n        const pagePromise = getMyCourses(\n            filters,\n            limit\n        ).then(coursesData => {\n            pageBuilder(coursesData, currentPage, pageData, actions);\n            return renderCourses(root, loadedPages[currentPage]);\n        }).catch(Notification.exception);\n\n        promises.push(pagePromise);\n    };\n};\n\n/**\n * Initialize the searching functionality so we can call it when required.\n *\n * @return {function(Object, Number, Object, Object, Object, Promise, Number, String): void}\n */\nconst searchFunctionalityCurry = () => {\n    resetGlobals();\n    return (filters, currentPage, pageData, actions, root, promises, limit, inputValue) => {\n        const searchingPromise = getSearchMyCourses(\n            filters,\n            limit,\n            inputValue\n        ).then(coursesData => {\n            pageBuilder(coursesData, currentPage, pageData, actions);\n            return renderCourses(root, loadedPages[currentPage]);\n        }).catch(Notification.exception);\n\n        promises.push(searchingPromise);\n    };\n};\n\n/**\n * Initialise the courses list and cards views on page load.\n *\n * @param {object} root The root element for the courses view.\n * @param {function} promiseFunction How do we fetch the courses and what do we do with them?\n * @param {null | string} inputValue What to search for\n */\nconst initializePagedContent = (root, promiseFunction, inputValue = null) => {\n    const pagingLimit = parseInt(root.find(SELECTORS.courseView.region).attr('data-paging'), 10);\n    let itemsPerPage = itemsPerPageFunc(pagingLimit, root);\n\n    const filters = getFilterValues(root);\n    const config = {...{}, ...DEFAULT_PAGED_CONTENT_CONFIG};\n    config.eventNamespace = namespace;\n\n    const pagedContentPromise = PagedContentFactory.createWithLimit(\n        itemsPerPage,\n        (pagesData, actions) => {\n            let promises = [];\n            pagesData.forEach(pageData => {\n                const currentPage = pageData.pageNumber;\n                let limit = (pageData.limit > 0) ? pageData.limit : 0;\n\n                // Reset local variables if limits have changed.\n                if (+lastLimit !== +limit) {\n                    loadedPages = [];\n                    courseOffset = 0;\n                    lastPage = 0;\n                }\n\n                if (lastPage === currentPage) {\n                    // If we are on the last page and have it's data then load it from cache.\n                    actions.allItemsLoaded(lastPage);\n                    promises.push(renderCourses(root, loadedPages[currentPage]));\n                    return;\n                }\n\n                lastLimit = limit;\n\n                // Get 2 pages worth of data as we will need it for the hidden functionality.\n                if (typeof (loadedPages[currentPage + 1]) === 'undefined') {\n                    if (typeof (loadedPages[currentPage]) === 'undefined') {\n                        limit *= 2;\n                    }\n                }\n\n                // Call the curried function that'll handle the course promise and any manipulation of it.\n                promiseFunction(filters, currentPage, pageData, actions, root, promises, limit, inputValue);\n            });\n            return promises;\n        },\n        config\n    );\n\n    pagedContentPromise.then((html, js) => {\n        registerPagedEventHandlers(root, namespace);\n        return Templates.replaceNodeContents(root.find(SELECTORS.courseView.region), html, js);\n    }).catch(Notification.exception);\n};\n\n/**\n * Listen to, and handle events for the myoverview block.\n *\n * @param {Object} root The myoverview block container element.\n * @param {HTMLElement} page The whole HTMLElement for our block.\n */\nconst registerEventListeners = (root, page) => {\n\n    CustomEvents.define(root, [\n        CustomEvents.events.activate\n    ]);\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_ADD_FAVOURITE, (e, data) => {\n        const favourite = $(e.target).closest(SELECTORS.ACTION_ADD_FAVOURITE);\n        const courseId = getCourseId(favourite);\n        addToFavourites(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_REMOVE_FAVOURITE, (e, data) => {\n        const favourite = $(e.target).closest(SELECTORS.ACTION_REMOVE_FAVOURITE);\n        const courseId = getCourseId(favourite);\n        removeFromFavourites(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.FAVOURITE_ICON, (e, data) => {\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_HIDE_COURSE, (e, data) => {\n        const target = $(e.target).closest(SELECTORS.ACTION_HIDE_COURSE);\n        const courseId = getCourseId(target);\n        hideCourse(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n\n    root.on(CustomEvents.events.activate, SELECTORS.ACTION_SHOW_COURSE, (e, data) => {\n        const target = $(e.target).closest(SELECTORS.ACTION_SHOW_COURSE);\n        const courseId = getCourseId(target);\n        showCourse(root, courseId);\n        data.originalEvent.preventDefault();\n    });\n\n    // Searching functionality event handlers.\n    const input = page.querySelector(SELECTORS.region.searchInput);\n    const clearIcon = page.querySelector(SELECTORS.region.clearIcon);\n\n    clearIcon.addEventListener('click', () => {\n        input.value = '';\n        input.focus();\n        clearSearch(clearIcon, root);\n    });\n\n    input.addEventListener('input', debounce(() => {\n        if (input.value === '') {\n            clearSearch(clearIcon, root);\n        } else {\n            activeSearch(clearIcon);\n            initializePagedContent(root, searchFunctionalityCurry(), input.value.trim());\n        }\n    }, 300));\n};\n\n/**\n * Reset the search icon and trigger the init for the block.\n *\n * @param {HTMLElement} clearIcon Our closing icon to manipulate.\n * @param {Object} root The myoverview block container element.\n */\nexport const clearSearch = (clearIcon, root) => {\n    clearIcon.classList.add('d-none');\n    init(root);\n};\n\n/**\n * Change the searching icon to its' active state.\n *\n * @param {HTMLElement} clearIcon Our closing icon to manipulate.\n */\nconst activeSearch = (clearIcon) => {\n    clearIcon.classList.remove('d-none');\n};\n\n/**\n * Intialise the courses list and cards views on page load.\n *\n * @param {object} root The root element for the courses view.\n */\nexport const init = root => {\n    root = $(root);\n    loadedPages = [];\n    lastPage = 0;\n    courseOffset = 0;\n\n    if (!root.attr('data-init')) {\n        const page = document.querySelector(SELECTORS.region.selectBlock);\n        registerEventListeners(root, page);\n        namespace = \"block_myoverview_\" + root.attr('id') + \"_\" + Math.random();\n        root.attr('data-init', true);\n    }\n\n    initializePagedContent(root, standardFunctionalityCurry());\n};\n\n/**\n * Reset the courses views to their original\n * state on first page load.courseOffset\n *\n * This is called when configuration has changed for the event lists\n * to cause them to reload their data.\n *\n * @param {Object} root The root element for the timeline view.\n */\nexport const reset = root => {\n    if (loadedPages.length > 0) {\n        loadedPages.forEach((courseList, index) => {\n            let pagedContentPage = getPagedContentContainer(root, index);\n            renderCourses(root, courseList).then((html, js) => {\n                return Templates.replaceNodeContents(pagedContentPage, html, js);\n            }).catch(Notification.exception);\n        });\n    } else {\n        init(root);\n    }\n};\n"],"file":"view.min.js"}