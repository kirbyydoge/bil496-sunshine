{"version":3,"sources":["../src/view_dates.js"],"names":["define","$","EventList","PubSub","PagedContentEvents","SELECTORS","EVENT_LIST_CONTAINER","NO_COURSES_EMPTY_MESSAGE","registerEventListeners","root","namespace","event","SET_ITEMS_PER_PAGE_LIMIT","subscribe","limit","data","load","find","length","eventListContainer","attr","Math","random","init","persistentLimitKey","eventNamespace","hasClass","reset","removeAttr","shown"],"mappings":"AAsBAA,OAAM,6BACN,CACI,QADJ,CAEI,2BAFJ,CAGI,aAHJ,CAII,2BAJJ,CADM,CAON,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKE,IAEMC,CAAAA,CAAS,CAAG,CACZC,oBAAoB,CAAE,wCADV,CAEZC,wBAAwB,CAAE,4CAFd,CAFlB,CAaMC,CAAsB,CAAG,SAASC,CAAT,CAAeC,CAAf,CAA0B,CACnD,GAAIC,CAAAA,CAAK,CAAGD,CAAS,CAAGN,CAAkB,CAACQ,wBAA3C,CACAT,CAAM,CAACU,SAAP,CAAiBF,CAAjB,CAAwB,SAASG,CAAT,CAAgB,CACpCb,CAAC,CAACQ,CAAD,CAAD,CAAQM,IAAR,CAAa,OAAb,CAAsBD,CAAtB,CACH,CAFD,CAGH,CAlBH,CAyBME,CAAI,CAAG,SAASP,CAAT,CAAe,CAEtB,GAAI,CAACA,CAAI,CAACQ,IAAL,CAAUZ,CAAS,CAACE,wBAApB,EAA8CW,MAAnD,CAA2D,IACnDC,CAAAA,CAAkB,CAAGV,CAAI,CAACQ,IAAL,CAAUZ,CAAS,CAACC,oBAApB,CAD8B,CAEnDI,CAAS,CAAGT,CAAC,CAACkB,CAAD,CAAD,CAAsBC,IAAtB,CAA2B,IAA3B,EAAmC,qBAAnC,CAA2DC,IAAI,CAACC,MAAL,EAFpB,CAGvDd,CAAsB,CAACC,CAAD,CAAOC,CAAP,CAAtB,CAMAR,CAAS,CAACqB,IAAV,CAAeJ,CAAf,CAJa,CACTK,kBAAkB,CAAE,sCADX,CAETC,cAAc,CAAEf,CAFP,CAIb,CACH,CACJ,CAtCH,CAkFE,MAAO,CACHa,IAAI,CArCG,QAAPA,CAAAA,IAAO,CAASd,CAAT,CAAe,CACtBA,CAAI,CAAGR,CAAC,CAACQ,CAAD,CAAR,CAGA,GAAIA,CAAI,CAACiB,QAAL,CAAc,QAAd,GAA2B,CAACjB,CAAI,CAACQ,IAAL,CAAUZ,CAAS,CAACE,wBAApB,EAA8CW,MAA9E,CAAsF,CAClFF,CAAI,CAACP,CAAD,CAAJ,CACAA,CAAI,CAACW,IAAL,CAAU,WAAV,IACH,CACJ,CA4BM,CAEHO,KAAK,CAtBG,QAARA,CAAAA,KAAQ,CAASlB,CAAT,CAAe,CACvBA,CAAI,CAACmB,UAAL,CAAgB,WAAhB,EACA,GAAInB,CAAI,CAACiB,QAAL,CAAc,QAAd,CAAJ,CAA6B,CACzBV,CAAI,CAACP,CAAD,CAAJ,CACAA,CAAI,CAACW,IAAL,CAAU,WAAV,IACH,CACJ,CAcM,CAGHS,KAAK,CAVG,QAARA,CAAAA,KAAQ,CAASpB,CAAT,CAAe,CACvB,GAAI,CAACA,CAAI,CAACW,IAAL,CAAU,WAAV,CAAL,CAA6B,CACzBJ,CAAI,CAACP,CAAD,CAAJ,CACAA,CAAI,CAACW,IAAL,CAAU,WAAV,IACH,CACJ,CAEM,CAKV,CAnGK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the timeline dates view for the timeline block.\n *\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'block_timeline/event_list',\n    'core/pubsub',\n    'core/paged_content_events'\n],\nfunction(\n    $,\n    EventList,\n    PubSub,\n    PagedContentEvents\n) {\n\n    var SELECTORS = {\n        EVENT_LIST_CONTAINER: '[data-region=\"event-list-container\"]',\n        NO_COURSES_EMPTY_MESSAGE: '[data-region=\"no-courses-empty-message\"]',\n    };\n\n    /**\n     * Setup the listeners for the timeline block\n     *\n     * @param {string} root view dates container\n     * @param {string} namespace The namespace for the paged content\n     */\n    var registerEventListeners = function(root, namespace) {\n        var event = namespace + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;\n        PubSub.subscribe(event, function(limit) {\n            $(root).data('limit', limit);\n        });\n    };\n\n    /**\n     * Initialise the event list and being loading the events.\n     *\n     * @param {object} root The root element for the timeline dates view.\n     */\n    var load = function(root) {\n\n        if (!root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\n            var eventListContainer = root.find(SELECTORS.EVENT_LIST_CONTAINER);\n            var namespace = $(eventListContainer).attr('id') + \"user_block_timeline\" + Math.random();\n            registerEventListeners(root, namespace);\n\n            var config = {\n                persistentLimitKey: \"block_timeline_user_limit_preference\",\n                eventNamespace: namespace\n            };\n            EventList.init(eventListContainer, config);\n        }\n    };\n\n    /**\n     * Initialise the timeline dates view. Begin loading the events\n     * if this view is active.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var init = function(root) {\n        root = $(root);\n\n        // Only need to handle events loading if the user is actively enrolled in a course and this view is active.\n        if (root.hasClass('active') && !root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\n            load(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    /**\n     * Reset the view back to it's initial state. If this view is active then\n     * beging loading the events.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var reset = function(root) {\n        root.removeAttr('data-seen');\n        if (root.hasClass('active')) {\n            load(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    /**\n     * Load the events if this is the first time the view is displayed.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var shown = function(root) {\n        if (!root.attr('data-seen')) {\n            load(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    return {\n        init: init,\n        reset: reset,\n        shown: shown\n    };\n});\n"],"file":"view_dates.min.js"}