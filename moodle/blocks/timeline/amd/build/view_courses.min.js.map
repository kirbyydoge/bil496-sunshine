{"version":3,"sources":["../src/view_courses.js"],"names":["define","$","Notification","CustomEvents","Templates","EventList","CourseRepository","EventsRepository","Pending","SELECTORS","MORE_COURSES_BUTTON","MORE_COURSES_BUTTON_CONTAINER","NO_COURSES_EMPTY_MESSAGE","NO_COURSES_WITH_EVENTS_MESSAGE","COURSES_LIST","COURSE_ITEMS_LOADING_PLACEHOLDER","COURSE_EVENTS_CONTAINER","COURSE_NAME","LOADING_ICON","TIMELINE_BLOCK","TIMELINE_SEARCH","TEMPLATES","COURSE_ITEMS","SECONDS_IN_DAY","additionalConfig","courseview","hideLoadingPlaceholder","root","find","addClass","showLoadingPlaceholder","removeClass","hideMoreCoursesButton","showMoreCoursesButton","enableMoreCoursesButtonLoading","button","prop","render","then","html","append","catch","disableMoreCoursesButtonLoading","remove","showNoCoursesWithEventsMessage","container","replaceNodeContents","hideNoCoursesWithEventsMessage","renderCourseItemsHTML","appendNodeContents","getOffset","parseInt","attr","setOffset","offset","getLimit","getDaysOffset","getDaysLimit","daysLimit","getMidnight","getStartTime","midnight","daysOffset","getEndTime","getEventsForCourseIds","courseIds","startTime","limit","endTime","searchValue","args","courseids","starttime","endtime","searchvalue","queryByCourses","getEventReloadTime","data","setEventReloadTime","time","hasReloadedEventsSince","loadEventsForCourses","courses","map","course","id","updateDisplayFromCourses","hasdaysoffset","hasdayslimit","daysoffset","dayslimit","nodayslimit","hascourses","length","loadMoreCourses","pendingPromise","closest","val","getEnrolledCoursesWithEventsByTimelineClassification","result","startEventLoadingTime","Date","now","nextOffset","nextoffset","moreCoursesAvailable","morecoursesavailable","eventsPromise","renderPromise","when","eventsByCourse","forEach","courseId","courseEventsContainer","eventListRoot","rootSelector","init","resolve","exception","registerEventListeners","events","activate","on","e","originalEvent","preventDefault","stopPropagation","shown","hasClass","reset","removeAttr"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the timeline courses view for the timeline block.\n *\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/templates',\n    'block_timeline/event_list',\n    'core_course/repository',\n    'block_timeline/calendar_events_repository',\n    'core/pending'\n],\nfunction(\n    $,\n    Notification,\n    CustomEvents,\n    Templates,\n    EventList,\n    CourseRepository,\n    EventsRepository,\n    Pending\n) {\n\n    var SELECTORS = {\n        MORE_COURSES_BUTTON: '[data-action=\"more-courses\"]',\n        MORE_COURSES_BUTTON_CONTAINER: '[data-region=\"more-courses-button-container\"]',\n        NO_COURSES_EMPTY_MESSAGE: '[data-region=\"no-courses-empty-message\"]',\n        NO_COURSES_WITH_EVENTS_MESSAGE: '[data-region=\"no-events-empty-message\"]',\n        COURSES_LIST: '[data-region=\"courses-list\"]',\n        COURSE_ITEMS_LOADING_PLACEHOLDER: '[data-region=\"course-items-loading-placeholder\"]',\n        COURSE_EVENTS_CONTAINER: '[data-region=\"course-events-container\"]',\n        COURSE_NAME: '[data-region=\"course-name\"]',\n        LOADING_ICON: '.loading-icon',\n        TIMELINE_BLOCK: '[data-region=\"timeline\"]',\n        TIMELINE_SEARCH: '[data-action=\"search\"]'\n    };\n\n    var TEMPLATES = {\n        COURSE_ITEMS: 'block_timeline/course-items',\n        LOADING_ICON: 'core/loading'\n    };\n\n    var COURSE_CLASSIFICATION = 'inprogress';\n    var COURSE_SORT = 'fullname asc';\n    var COURSE_EVENT_LIMIT = 5;\n    var COURSE_LIMIT = 2;\n    var SECONDS_IN_DAY = 60 * 60 * 24;\n\n    const additionalConfig = {courseview: true};\n\n    /**\n     * Hide the loading placeholder elements.\n     *\n     * @param {object} root The rool element.\n     */\n    var hideLoadingPlaceholder = function(root) {\n        root.find(SELECTORS.COURSE_ITEMS_LOADING_PLACEHOLDER).addClass('hidden');\n    };\n\n    /**\n     * Show the loading placeholder elements.\n     *\n     * @param {object} root The rool element.\n     */\n    const showLoadingPlaceholder = function(root) {\n        root.find(SELECTORS.COURSE_ITEMS_LOADING_PLACEHOLDER).removeClass('hidden');\n    };\n\n    /**\n     * Hide the \"more courses\" button.\n     *\n     * @param {object} root The rool element.\n     */\n    var hideMoreCoursesButton = function(root) {\n        root.find(SELECTORS.MORE_COURSES_BUTTON_CONTAINER).addClass('hidden');\n    };\n\n    /**\n     * Show the \"more courses\" button.\n     *\n     * @param {object} root The rool element.\n     */\n    var showMoreCoursesButton = function(root) {\n        root.find(SELECTORS.MORE_COURSES_BUTTON_CONTAINER).removeClass('hidden');\n    };\n\n    /**\n     * Disable the \"more courses\" button and show the loading spinner.\n     *\n     * @param {object} root The rool element.\n     */\n    var enableMoreCoursesButtonLoading = function(root) {\n        var button = root.find(SELECTORS.MORE_COURSES_BUTTON);\n        button.prop('disabled', true);\n        Templates.render(TEMPLATES.LOADING_ICON, {})\n            .then(function(html) {\n                button.append(html);\n                return html;\n            })\n            .catch(function() {\n                // It's not important if this false so just do so silently.\n                return false;\n            });\n    };\n\n    /**\n     * Enable the \"more courses\" button and remove the loading spinner.\n     *\n     * @param {object} root The rool element.\n     */\n    var disableMoreCoursesButtonLoading = function(root) {\n        var button = root.find(SELECTORS.MORE_COURSES_BUTTON);\n        button.prop('disabled', false);\n        button.find(SELECTORS.LOADING_ICON).remove();\n    };\n\n    /**\n     * Display the message for when courses have no events available (within the current filtering).\n     *\n     * @param {object} root The rool element.\n     */\n    const showNoCoursesWithEventsMessage = function(root) {\n        // Remove any course list contents, since we will display the no events message.\n        const container = root.find(SELECTORS.COURSES_LIST);\n        Templates.replaceNodeContents(container, '', '');\n        root.find(SELECTORS.NO_COURSES_WITH_EVENTS_MESSAGE).removeClass('hidden');\n    };\n\n    /**\n     * Hide the message for when courses have no events available (within the current filtering).\n     *\n     * @param {object} root The rool element.\n     */\n    const hideNoCoursesWithEventsMessage = function(root) {\n        root.find(SELECTORS.NO_COURSES_WITH_EVENTS_MESSAGE).addClass('hidden');\n    };\n\n    /**\n     * Render the course items HTML to the page.\n     *\n     * @param {object} root The rool element.\n     * @param {string} html The course items HTML to render.\n     * @param {boolean} append Whether the HTML should be appended (eg pressed \"show more courses\").\n     *                         Defaults to false - replaces the existing content (eg when modifying filter values).\n     */\n    var renderCourseItemsHTML = function(root, html, append = false) {\n        var container = root.find(SELECTORS.COURSES_LIST);\n\n        if (append) {\n            Templates.appendNodeContents(container, html, '');\n        } else {\n            Templates.replaceNodeContents(container, html, '');\n        }\n    };\n\n    /**\n     * Return the offset value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getOffset = function(root) {\n        return parseInt(root.attr('data-offset'), 10);\n    };\n\n    /**\n     * Set the offset value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} offset Offset value.\n     */\n    var setOffset = function(root, offset) {\n        root.attr('data-offset', offset);\n    };\n\n    /**\n     * Return the limit value for fetching courses.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getLimit = function(root) {\n        return parseInt(root.attr('data-limit'), 10);\n    };\n\n    /**\n     * Return the days offset value for fetching events.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getDaysOffset = function(root) {\n        return parseInt(root.attr('data-days-offset'), 10);\n    };\n\n    /**\n     * Return the days limit value for fetching events. The days\n     * limit is optional so undefined will be returned if it isn't\n     * set.\n     *\n     * @param {object} root The rool element.\n     * @return {int|undefined}\n     */\n    var getDaysLimit = function(root) {\n        var daysLimit = root.attr('data-days-limit');\n        return daysLimit != undefined ? parseInt(daysLimit, 10) : undefined;\n    };\n\n    /**\n     * Return the timestamp for the user's midnight.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getMidnight = function(root) {\n        return parseInt(root.attr('data-midnight'), 10);\n    };\n\n    /**\n     * Return the start time for fetching events. This is calculated\n     * based on the user's midnight value so that timezones are\n     * preserved.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getStartTime = function(root) {\n        var midnight = getMidnight(root);\n        var daysOffset = getDaysOffset(root);\n        return midnight + (daysOffset * SECONDS_IN_DAY);\n    };\n\n    /**\n     * Return the end time for fetching events. This is calculated\n     * based on the user's midnight value so that timezones are\n     * preserved.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getEndTime = function(root) {\n        var midnight = getMidnight(root);\n        var daysLimit = getDaysLimit(root);\n        return daysLimit != undefined ? midnight + (daysLimit * SECONDS_IN_DAY) : null;\n    };\n\n    /**\n     * Get a list of events for the given course ids. Returns a promise that will\n     * be resolved with the events.\n     *\n     * @param {array} courseIds The list of course ids to fetch events for.\n     * @param {Number} startTime Timestamp to fetch events from.\n     * @param {Number} limit Limit to the number of events (this applies per course, not total)\n     * @param {Number} endTime Timestamp to fetch events to.\n     * @param {string|undefined} searchValue Search value\n     * @return {object} jQuery promise.\n     */\n    var getEventsForCourseIds = function(courseIds, startTime, limit, endTime, searchValue) {\n        var args = {\n            courseids: courseIds,\n            starttime: startTime,\n            limit: limit\n        };\n\n        if (endTime) {\n            args.endtime = endTime;\n        }\n\n        if (searchValue) {\n            args.searchvalue = searchValue;\n        }\n\n        return EventsRepository.queryByCourses(args);\n    };\n\n    /**\n     * Get the last time the events were reloaded.\n     *\n     * @param {object} root The rool element.\n     * @return {Number}\n     */\n    var getEventReloadTime = function(root) {\n        return root.data('last-event-load-time');\n    };\n\n    /**\n     * Set the last time the events were reloaded.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} time Timestamp in milliseconds.\n     */\n    var setEventReloadTime = function(root, time) {\n        root.data('last-event-load-time', time);\n    };\n\n    /**\n     * Check if events have begun reloading since the given\n     * time.\n     *\n     * @param {object} root The rool element.\n     * @param {Number} time Timestamp in milliseconds.\n     * @return {bool}\n     */\n    var hasReloadedEventsSince = function(root, time) {\n        return getEventReloadTime(root) > time;\n    };\n\n    /**\n     * Send a request to the server to load the events for the courses.\n     *\n     * @param {array} courses List of course objects.\n     * @param {Number} startTime Timestamp to load events after.\n     * @param {int|undefined} endTime Timestamp to load events up until.\n     * @param {string|undefined} searchValue Search value\n     * @return {object} jQuery promise resolved with the events.\n     */\n    var loadEventsForCourses = function(courses, startTime, endTime, searchValue) {\n        var courseIds = courses.map(function(course) {\n            return course.id;\n        });\n\n        return getEventsForCourseIds(courseIds, startTime, COURSE_EVENT_LIMIT + 1, endTime, searchValue);\n    };\n\n    /**\n     * Render the courses in the DOM once the server has returned the courses.\n     *\n     * @param {array} courses List of course objects.\n     * @param {object} root The root element\n     * @param {Number} midnight The midnight timestamp in the user's timezone.\n     * @param {Number} daysOffset Number of days from today to offset the events.\n     * @param {Number} daysLimit Number of days from today to limit the events to.\n     * @param {boolean} append Whether new content should be appended instead of replaced (eg \"show more courses\").\n     * @return {object} jQuery promise resolved after rendering is complete.\n     */\n    var updateDisplayFromCourses = function(courses, root, midnight, daysOffset, daysLimit, append) {\n        // Render the courses template.\n        return Templates.render(TEMPLATES.COURSE_ITEMS, {\n            courses: courses,\n            midnight: midnight,\n            hasdaysoffset: true,\n            hasdayslimit: daysLimit != undefined,\n            daysoffset: daysOffset,\n            dayslimit: daysLimit,\n            nodayslimit: daysLimit == undefined,\n            courseview: true,\n            hascourses: true\n        }).then(function(html) {\n            hideLoadingPlaceholder(root);\n\n            if (html) {\n                // Template rendering is complete and we have the HTML so we can\n                // add it to the DOM.\n                renderCourseItemsHTML(root, html, append);\n            }\n\n            return html;\n        })\n        .then(function(html) {\n            if (courses.length < COURSE_LIMIT) {\n                // We know there aren't any more courses because we got back less\n                // than we asked for so hide the button to request more.\n                hideMoreCoursesButton(root);\n            } else {\n                // Make sure the button is visible if there are more courses to load.\n                showMoreCoursesButton(root);\n            }\n\n            return html;\n        })\n        .catch(function() {\n            hideLoadingPlaceholder(root);\n        });\n    };\n\n    /**\n     * Find all of the visible course blocks and initialise the event\n     * list module to being loading the events for the course block.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     * @param {boolean} append Whether content should be appended instead of replaced (eg \"show more courses\"). False by default.\n     * @return {object} jQuery promise resolved with courses and events.\n     */\n    var loadMoreCourses = function(root, append = false) {\n        const pendingPromise = new Pending('block/timeline:load-more-courses');\n        var offset = getOffset(root);\n        var limit = getLimit(root);\n        const startTime = getStartTime(root);\n        const endTime = getEndTime(root);\n        const searchValue = root.closest(SELECTORS.TIMELINE_BLOCK).find(SELECTORS.TIMELINE_SEARCH).val();\n\n        // Start loading the next set of courses.\n        // Fetch up to limit number of courses with at least one action event in the time filtering specified.\n        // Courses without events will also be fetched, but hidden in case they have events in other timespans.\n        return CourseRepository.getEnrolledCoursesWithEventsByTimelineClassification(\n            COURSE_CLASSIFICATION,\n            limit,\n            offset,\n            COURSE_SORT,\n            searchValue,\n            startTime,\n            endTime\n        ).then(function(result) {\n            var startEventLoadingTime = Date.now();\n            var courses = result.courses;\n            var nextOffset = result.nextoffset;\n            var daysOffset = getDaysOffset(root);\n            var daysLimit = getDaysLimit(root);\n            var midnight = getMidnight(root);\n            const moreCoursesAvailable = result.morecoursesavailable;\n\n            // Record the next offset if we want to request more courses.\n            setOffset(root, nextOffset);\n            // Load the events for these courses.\n            var eventsPromise = loadEventsForCourses(courses, startTime, endTime, searchValue);\n            // Render the courses in the DOM.\n            var renderPromise = updateDisplayFromCourses(courses, root, midnight, daysOffset, daysLimit, append);\n\n            return $.when(eventsPromise, renderPromise)\n                .then(function(eventsByCourse) {\n                    if (hasReloadedEventsSince(root, startEventLoadingTime)) {\n                        // All of the events are being reloaded so ignore our results.\n                        return eventsByCourse;\n                    }\n\n                    if (courses.length > 0) {\n                        // Render the events in the correct course event list.\n                        courses.forEach(function(course) {\n                            const courseId = course.id;\n                            const containerSelector = '[data-region=\"course-events-container\"][data-course-id=\"' + courseId + '\"]';\n                            const courseEventsContainer = root.find(containerSelector);\n                            const eventListRoot = courseEventsContainer.find(EventList.rootSelector);\n\n                            EventList.init(eventListRoot, additionalConfig);\n                        });\n\n                        if (!moreCoursesAvailable) {\n                            // If no more courses with events matching the current filtering exist, hide the more courses button.\n                            hideMoreCoursesButton(root);\n                        } else {\n                            // If more courses exist with events matching the current filtering, show the more courses button.\n                            showMoreCoursesButton(root);\n                        }\n                    } else {\n                        // No more courses to load, hide the more courses button.\n                        hideMoreCoursesButton(root);\n\n                        // A zero offset means this was not loading \"more courses\", so we need to display the no results message.\n                        if (offset == 0) {\n                            showNoCoursesWithEventsMessage(root);\n                        }\n                    }\n\n                    return eventsByCourse;\n                });\n        }).then(() => {\n            return pendingPromise.resolve();\n        }).catch(Notification.exception);\n    };\n\n    /**\n     * Add event listeners to load more courses for the courses view.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var registerEventListeners = function(root) {\n        CustomEvents.define(root, [CustomEvents.events.activate]);\n        // Show more courses and load their events when the user clicks the \"more courses\" button.\n        root.on(CustomEvents.events.activate, SELECTORS.MORE_COURSES_BUTTON, function(e, data) {\n            enableMoreCoursesButtonLoading(root);\n            loadMoreCourses(root, true)\n                .then(function() {\n                    disableMoreCoursesButtonLoading(root);\n                    return;\n                })\n                .catch(function() {\n                    disableMoreCoursesButtonLoading(root);\n                });\n\n            if (data) {\n                data.originalEvent.preventDefault();\n                data.originalEvent.stopPropagation();\n            }\n            e.stopPropagation();\n        });\n    };\n\n    /**\n     * Initialise the timeline courses view. Begin loading the events\n     * if this view is active. Add the relevant event listeners.\n     *\n     * This function should only be called once per page load because it\n     * is adding event listeners to the page.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var init = function(root) {\n        root = $(root);\n\n        // Only need to handle course loading if the user is actively enrolled in a course.\n        if (!root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\n            setEventReloadTime(root, Date.now());\n\n            if (root.hasClass('active')) {\n                // Only load if this is active otherwise it will be lazy loaded later.\n                loadMoreCourses(root);\n                root.attr('data-seen', true);\n            }\n\n            registerEventListeners(root);\n        }\n    };\n\n    /**\n     * Reset the element back to it's initial state. Begin loading the events again\n     * if this view is active.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var reset = function(root) {\n\n        setOffset(root, 0);\n        showLoadingPlaceholder(root);\n        hideNoCoursesWithEventsMessage(root);\n        root.removeAttr('data-seen');\n\n        if (root.hasClass('active')) {\n            shown(root);\n        }\n    };\n\n    /**\n     * Begin loading the events unless we know there are no actively enrolled courses.\n     *\n     * @param {object} root The root element for the timeline courses view.\n     */\n    var shown = function(root) {\n        if (!root.attr('data-seen') && !root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\n            loadMoreCourses(root);\n            root.attr('data-seen', true);\n        }\n    };\n\n    return {\n        init: init,\n        reset: reset,\n        shown: shown\n    };\n});\n"],"file":"view_courses.min.js"}