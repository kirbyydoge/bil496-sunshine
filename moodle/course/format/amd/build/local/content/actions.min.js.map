{"version":3,"sources":["../../../src/local/content/actions.js"],"names":["name","selectors","ACTIONLINK","SECTIONLINK","CMLINK","SECTIONNODE","MODALTOGGLER","ADDSECTION","CONTENTTREE","ACTIONMENU","ACTIONMENUTOGGLER","classes","DISABLED","state","addEventListener","element","_dispatchClick","_checkSectionlist","CourseEvents","sectionRefreshed","watch","handler","event","target","closest","classList","contains","preventDefault","methodName","_actionMethodName","dataset","action","requestName","charAt","toUpperCase","slice","_setAddSectionLocked","course","sectionlist","length","maxsections","sectionId","id","sectionInfo","reactive","get","editTools","_getClosestActionMenuToogler","exporter","getExporter","data","sectionid","sectiontitle","title","modalParams","body","Templates","render","_modalBodyRenderedPromise","modal","modalBody","getBody","currentElement","querySelector","_disableLink","generalSection","ContentTree","SECTION","TOGGLER","COLLAPSE","matches","for","getAttribute","dispatch","_destroyModal","cmId","cmInfo","cmid","cmname","ENTER","sectionnode","toggler","find","collapsibleId","attr","replace","collapse","targetSectionId","targetCmId","dropData","cmDraggableData","nextcmid","section","cmlist","cmList","hassummary","rawtitle","saveButtonText","type","ModalFactory","types","SAVE_CANCEL","getRoot","on","ModalEvents","save","e","destroy","locked","targets","getElements","forEach","toggle","setElementLocked","style","pointerEvents","userSelect","add","setAttribute","Promise","resolve","reject","create","then","setRemoveOnClose","bodyRendered","setSaveButtonText","show","catch","hide","pendingDestroy","Pending","focus","setTimeout","actionMenu","BaseComponent"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course state actions dispatcher.\n *\n * This module captures all data-dispatch links in the course content and dispatch the proper\n * state mutation, including any confirmation and modal required.\n *\n * @module     core_courseformat/local/content/actions\n * @class      core_courseformat/local/content/actions\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport {getList} from 'core/normalise';\nimport * as CourseEvents from 'core_course/events';\nimport Pending from 'core/pending';\nimport ContentTree from 'core_courseformat/local/courseeditor/contenttree';\n// The jQuery module is only used for interacting with Boostrap 4. It can we removed when MDL-79179 is integrated.\nimport jQuery from 'jquery';\n\n// Load global strings.\nprefetchStrings('core', ['movecoursesection', 'movecoursemodule', 'confirm', 'delete']);\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'content_actions';\n        // Default query selectors.\n        this.selectors = {\n            ACTIONLINK: `[data-action]`,\n            // Move modal selectors.\n            SECTIONLINK: `[data-for='section']`,\n            CMLINK: `[data-for='cm']`,\n            SECTIONNODE: `[data-for='sectionnode']`,\n            MODALTOGGLER: `[data-toggle='collapse']`,\n            ADDSECTION: `[data-action='addSection']`,\n            CONTENTTREE: `#destination-selector`,\n            ACTIONMENU: `.action-menu`,\n            ACTIONMENUTOGGLER: `[data-toggle=\"dropdown\"]`,\n        };\n        // Component css classes.\n        this.classes = {\n            DISABLED: `disabled`,\n        };\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the state data.\n     *\n     */\n    stateReady(state) {\n        // Delegate dispatch clicks.\n        this.addEventListener(\n            this.element,\n            'click',\n            this._dispatchClick\n        );\n        // Check section limit.\n        this._checkSectionlist({state});\n        // Add an Event listener to recalculate limits it if a section HTML is altered.\n        this.addEventListener(\n            this.element,\n            CourseEvents.sectionRefreshed,\n            () => this._checkSectionlist({state})\n        );\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            // Check section limit.\n            {watch: `course.sectionlist:updated`, handler: this._checkSectionlist},\n        ];\n    }\n\n    _dispatchClick(event) {\n        const target = event.target.closest(this.selectors.ACTIONLINK);\n        if (!target) {\n            return;\n        }\n        if (target.classList.contains(this.classes.DISABLED)) {\n            event.preventDefault();\n            return;\n        }\n\n        // Invoke proper method.\n        const methodName = this._actionMethodName(target.dataset.action);\n\n        if (this[methodName] !== undefined) {\n            this[methodName](target, event);\n        }\n    }\n\n    _actionMethodName(name) {\n        const requestName = name.charAt(0).toUpperCase() + name.slice(1);\n        return `_request${requestName}`;\n    }\n\n    /**\n     * Check the section list and disable some options if needed.\n     *\n     * @param {Object} detail the update details.\n     * @param {Object} detail.state the state object.\n     */\n    _checkSectionlist({state}) {\n        // Disable \"add section\" actions if the course max sections has been exceeded.\n        this._setAddSectionLocked(state.course.sectionlist.length > state.course.maxsections);\n    }\n\n    /**\n     * Handle a move section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveSection(target, event) {\n        // Check we have an id.\n        const sectionId = target.dataset.id;\n        if (!sectionId) {\n            return;\n        }\n        const sectionInfo = this.reactive.get('section', sectionId);\n\n        event.preventDefault();\n\n        // The section edit menu to refocus on end.\n        const editTools = this._getClosestActionMenuToogler(target);\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target section id and title.\n        data.sectionid = sectionInfo.id;\n        data.sectiontitle = sectionInfo.title;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursesection', 'core'),\n            body: Templates.render('core_courseformat/local/content/movesection', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element and section zero.\n        const currentElement = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-id='${sectionId}']`);\n        this._disableLink(currentElement);\n        const generalSection = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-number='0']`);\n        this._disableLink(generalSection);\n\n        // Setup keyboard navigation.\n        new ContentTree(\n            modalBody.querySelector(this.selectors.CONTENTTREE),\n            {\n                SECTION: this.selectors.SECTIONNODE,\n                TOGGLER: this.selectors.MODALTOGGLER,\n                COLLAPSE: this.selectors.MODALTOGGLER,\n            },\n            true\n        );\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for != 'section' || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n            this.reactive.dispatch('sectionMove', [sectionId], target.dataset.id);\n            this._destroyModal(modal, editTools);\n        });\n    }\n\n    /**\n     * Handle a move cm request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveCm(target, event) {\n        // Check we have an id.\n        const cmId = target.dataset.id;\n        if (!cmId) {\n            return;\n        }\n        const cmInfo = this.reactive.get('cm', cmId);\n\n        event.preventDefault();\n\n        // The section edit menu to refocus on end.\n        const editTools = this._getClosestActionMenuToogler(target);\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target cm info.\n        data.cmid = cmInfo.id;\n        data.cmname = cmInfo.name;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursemodule', 'core'),\n            body: Templates.render('core_courseformat/local/content/movecm', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element.\n        let currentElement = modalBody.querySelector(`${this.selectors.CMLINK}[data-id='${cmId}']`);\n        this._disableLink(currentElement);\n\n        // Setup keyboard navigation.\n        new ContentTree(\n            modalBody.querySelector(this.selectors.CONTENTTREE),\n            {\n                SECTION: this.selectors.SECTIONNODE,\n                TOGGLER: this.selectors.MODALTOGGLER,\n                COLLAPSE: this.selectors.MODALTOGGLER,\n                ENTER: this.selectors.SECTIONLINK,\n            }\n        );\n\n        // Open the cm section node if possible (Bootstrap 4 uses jQuery to interact with collapsibles).\n        // All jQuery int this code can be replaced when MDL-79179 is integrated.\n        const sectionnode = currentElement.closest(this.selectors.SECTIONNODE);\n        const toggler = jQuery(sectionnode).find(this.selectors.MODALTOGGLER);\n        let collapsibleId = toggler.data('target') ?? toggler.attr('href');\n        if (collapsibleId) {\n            // We cannot be sure we have # in the id element name.\n            collapsibleId = collapsibleId.replace('#', '');\n            jQuery(`#${collapsibleId}`).collapse('toggle');\n        }\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for === undefined || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n\n            // Get draggable data from cm or section to dispatch.\n            let targetSectionId;\n            let targetCmId;\n            if (target.dataset.for == 'cm') {\n                const dropData = exporter.cmDraggableData(this.reactive.state, target.dataset.id);\n                targetSectionId = dropData.sectionid;\n                targetCmId = dropData.nextcmid;\n            } else {\n                const section = this.reactive.get('section', target.dataset.id);\n                targetSectionId = target.dataset.id;\n                targetCmId = section?.cmlist[0];\n            }\n\n            this.reactive.dispatch('cmMove', [cmId], targetSectionId, targetCmId);\n            this._destroyModal(modal, editTools);\n        });\n    }\n\n    /**\n     * Handle a create section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestAddSection(target, event) {\n        event.preventDefault();\n        this.reactive.dispatch('addSection', target.dataset.id ?? 0);\n    }\n\n    /**\n     * Handle a delete section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestDeleteSection(target, event) {\n        // Check we have an id.\n        const sectionId = target.dataset.id;\n\n        if (!sectionId) {\n            return;\n        }\n        const sectionInfo = this.reactive.get('section', sectionId);\n\n        event.preventDefault();\n\n        const cmList = sectionInfo.cmlist ?? [];\n        if (cmList.length || sectionInfo.hassummary || sectionInfo.rawtitle) {\n            // We need confirmation if the section has something.\n            const modalParams = {\n                title: getString('confirm', 'core'),\n                body: getString('confirmdeletesection', 'moodle', sectionInfo.title),\n                saveButtonText: getString('delete', 'core'),\n                type: ModalFactory.types.SAVE_CANCEL,\n            };\n\n            const modal = await this._modalBodyRenderedPromise(modalParams);\n\n            modal.getRoot().on(\n                ModalEvents.save,\n                e => {\n                    // Stop the default save button behaviour which is to close the modal.\n                    e.preventDefault();\n                    modal.destroy();\n                    this.reactive.dispatch('sectionDelete', [sectionId]);\n                }\n            );\n            return;\n        } else {\n            // We don't need confirmation to delete empty sections.\n            this.reactive.dispatch('sectionDelete', [sectionId]);\n        }\n    }\n\n    /**\n     * Disable all add sections actions.\n     *\n     * @param {boolean} locked the new locked value.\n     */\n    _setAddSectionLocked(locked) {\n        const targets = this.getElements(this.selectors.ADDSECTION);\n        targets.forEach(element => {\n            element.classList.toggle(this.classes.DISABLED, locked);\n            this.setElementLocked(element, locked);\n        });\n    }\n\n    /**\n     * Replace an element with a copy with a different tag name.\n     *\n     * @param {Element} element the original element\n     */\n    _disableLink(element) {\n        if (element) {\n            element.style.pointerEvents = 'none';\n            element.style.userSelect = 'none';\n            element.classList.add(this.classes.DISABLED);\n            element.setAttribute('aria-disabled', true);\n            element.addEventListener('click', event => event.preventDefault());\n        }\n    }\n\n    /**\n     * Render a modal and return a body ready promise.\n     *\n     * @param {object} modalParams the modal params\n     * @return {Promise} the modal body ready promise\n     */\n    _modalBodyRenderedPromise(modalParams) {\n        return new Promise((resolve, reject) => {\n            ModalFactory.create(modalParams).then((modal) => {\n                modal.setRemoveOnClose(true);\n                // Handle body loading event.\n                modal.getRoot().on(ModalEvents.bodyRendered, () => {\n                    resolve(modal);\n                });\n                // Configure some extra modal params.\n                if (modalParams.saveButtonText !== undefined) {\n                    modal.setSaveButtonText(modalParams.saveButtonText);\n                }\n                modal.show();\n                return;\n            }).catch(() => {\n                reject(`Cannot load modal content`);\n            });\n        });\n    }\n\n    /**\n     * Hide and later destroy a modal.\n     *\n     * Behat will fail if we remove the modal while some boostrap collapse is executing.\n     *\n     * @param {Modal} modal\n     * @param {HTMLElement} element the dom element to focus on.\n     */\n    _destroyModal(modal, element) {\n        modal.hide();\n        const pendingDestroy = new Pending(`courseformat/actions:destroyModal`);\n        if (element) {\n            element.focus();\n        }\n        setTimeout(() =>{\n            modal.destroy();\n            pendingDestroy.resolve();\n        }, 500);\n    }\n\n    /**\n     * Get the closest actions menu toggler to an action element.\n     *\n     * @param {HTMLElement} element the action link element\n     * @returns {HTMLElement|undefined}\n     */\n    _getClosestActionMenuToogler(element) {\n        const actionMenu = element.closest(this.selectors.ACTIONMENU);\n        if (!actionMenu) {\n            return undefined;\n        }\n        return actionMenu.querySelector(this.selectors.ACTIONMENUTOGGLER);\n    }\n}\n"],"file":"actions.min.js"}