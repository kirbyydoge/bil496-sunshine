{"version":3,"sources":["../../../src/local/courseindex/section.js"],"names":["Component","name","selectors","SECTION_ITEM","SECTION_TITLE","CM_LAST","classes","SECTIONHIDDEN","SECTIONCURRENT","LOCKED","RESTRICTIONS","PAGEITEM","id","element","dataset","isPageItem","state","configState","sectionItem","getElement","reactive","isEditing","supportComponents","titleitem","SectionTitle","fullregion","configDragDrop","section","get","window","location","href","sectionurl","replace","dispatch","scrollIntoView","watch","handler","remove","_refreshSection","_refreshPageItem","classList","toggle","visible","current","DRAGGING","dragging","locked","hasrestrictions","innerHTML","title","pageItem","sectionId","indexcollapsed","isStatic","type","block","target","document","getElementById","DndSection"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index section component.\n *\n * This component is used to control specific course section interactions like drag and drop.\n *\n * @module     core_courseformat/local/courseindex/section\n * @class      core_courseformat/local/courseindex/section\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport SectionTitle from 'core_courseformat/local/courseindex/sectiontitle';\nimport DndSection from 'core_courseformat/local/courseeditor/dndsection';\n\nexport default class Component extends DndSection {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'courseindex_section';\n        // Default query selectors.\n        this.selectors = {\n            SECTION_ITEM: `[data-for='section_item']`,\n            SECTION_TITLE: `[data-for='section_title']`,\n            CM_LAST: `[data-for=\"cm\"]:last-child`,\n        };\n        // Default classes to toggle on refresh.\n        this.classes = {\n            SECTIONHIDDEN: 'dimmed',\n            SECTIONCURRENT: 'current',\n            LOCKED: 'editinprogress',\n            RESTRICTIONS: 'rectrictions',\n            PAGEITEM: 'pageitem',\n        };\n\n        // We need our id to watch specific events.\n        this.id = this.element.dataset.id;\n        this.isPageItem = false;\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the initial state\n     */\n    stateReady(state) {\n        this.configState(state);\n        const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\n        // Drag and drop is only available for components compatible course formats.\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\n            // Init the inner dragable element passing the full section as affected region.\n            const titleitem = new SectionTitle({\n                ...this,\n                element: sectionItem,\n                fullregion: this.element,\n            });\n            this.configDragDrop(titleitem);\n        }\n        // Check if the current url is the section url.\n        const section = state.section.get(this.id);\n        if (window.location.href == section.sectionurl.replace(/&amp;/g, \"&\")) {\n            this.reactive.dispatch('setPageItem', 'section', this.id);\n            sectionItem.scrollIntoView();\n        }\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `section[${this.id}]:deleted`, handler: this.remove},\n            {watch: `section[${this.id}]:updated`, handler: this._refreshSection},\n            {watch: `course.pageItem:updated`, handler: this._refreshPageItem},\n        ];\n    }\n\n    /**\n     * Get the last CM element of that section.\n     *\n     * @returns {element|null}\n     */\n    getLastCm() {\n        return this.getElement(this.selectors.CM_LAST);\n    }\n\n    /**\n     * Update a course index section using the state information.\n     *\n     * @param {Object} param details the update details.\n     * @param {Object} param.element the section element\n     */\n    _refreshSection({element}) {\n        // Update classes.\n        const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\n        sectionItem.classList.toggle(this.classes.SECTIONHIDDEN, !element.visible);\n        this.element.classList.toggle(this.classes.SECTIONCURRENT, element.current);\n        this.element.classList.toggle(this.classes.DRAGGING, element.dragging ?? false);\n        this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\n        this.element.classList.toggle(this.classes.RESTRICTIONS, element.hasrestrictions ?? false);\n        this.locked = element.locked;\n        // Update title.\n        this.getElement(this.selectors.SECTION_TITLE).innerHTML = element.title;\n    }\n\n    /**\n     * Handle a page item update.\n     *\n     * @param {Object} details the update details\n     * @param {Object} details.state the state data.\n     * @param {Object} details.element the course state data.\n     */\n    _refreshPageItem({element, state}) {\n        if (!element.pageItem) {\n            return;\n        }\n        if (element.pageItem.sectionId !== this.id && this.isPageItem) {\n            this.pageItem = false;\n            this.getElement(this.selectors.SECTION_ITEM).classList.remove(this.classes.PAGEITEM);\n            return;\n        }\n        const section = state.section.get(this.id);\n        if (section.indexcollapsed && !element.pageItem?.isStatic) {\n            this.pageItem = (element.pageItem?.sectionId == this.id);\n        } else {\n            this.pageItem = (element.pageItem.type == 'section' && element.pageItem.id == this.id);\n        }\n        const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\n        sectionItem.classList.toggle(this.classes.PAGEITEM, this.pageItem ?? false);\n        if (this.pageItem && !this.reactive.isEditing) {\n            this.element.scrollIntoView({block: \"nearest\"});\n        }\n    }\n}\n"],"file":"section.min.js"}