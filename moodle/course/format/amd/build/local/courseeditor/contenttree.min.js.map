{"version":3,"sources":["../../../src/local/courseeditor/contenttree.js"],"names":["mainElement","selectors","preventcache","SECTION","TOGGLER","COLLAPSE","ENTER","_getVisibleItems","getVisibleItems","refreshVisibleItemsCache","treeRoot","on","registerEnterCallback","enterCallback","bind","activeItem","data","jQueryItem","item","isGroupItem","enter","querySelector","getAttribute","window","location","href","click","link","toggler","find","collapsibleId","attr","replace","collapsible","length","collapse","isGroupCollapsed","toggleGroup","togglers","querySelectorAll","forEach","expandGroup","Tree"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index keyboard navigation and aria-tree compatibility.\n *\n * Node tree and bootstrap collapsibles don't use the same HTML structure. However,\n * all keybindings and logic is compatible. This class translate the primitive opetations\n * to a bootstrap collapsible structure.\n *\n * @module     core_courseformat/local/courseindex/keyboardnav\n * @class      core_courseformat/local/courseindex/keyboardnav\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// The core/tree uses jQuery to expand all nodes.\nimport jQuery from 'jquery';\nimport Tree from 'core/tree';\nimport {getList} from 'core/normalise';\n\nexport default class extends Tree {\n\n    /**\n     * Setup the core/tree keyboard navigation.\n     *\n     * @param {Element|undefined} mainElement an alternative main element in case it is not from the parent component\n     * @param {Object|undefined} selectors alternative selectors\n     * @param {boolean} preventcache if the elements cache must be disabled.\n     */\n    constructor(mainElement, selectors, preventcache) {\n        // Init this value with the parent DOM element.\n        super(mainElement);\n\n        // Get selectors from parent.\n        this.selectors = {\n            SECTION: selectors.SECTION,\n            TOGGLER: selectors.TOGGLER,\n            COLLAPSE: selectors.COLLAPSE,\n            ENTER: selectors.ENTER ?? selectors.TOGGLER,\n        };\n\n        // The core/tree library saves the visible elements cache inside the main tree node.\n        // However, in edit mode content can change suddenly so we need to refresh caches when needed.\n        if (preventcache) {\n            this._getVisibleItems = this.getVisibleItems;\n            this.getVisibleItems = () => {\n                this.refreshVisibleItemsCache();\n                return this._getVisibleItems();\n            };\n        }\n        // All jQuery events can be replaced when MDL-79179 is integrated.\n        this.treeRoot.on('hidden.bs.collapse shown.bs.collapse', () => {\n            this.refreshVisibleItemsCache();\n        });\n        // Register a custom callback for pressing enter key.\n        this.registerEnterCallback(this.enterCallback.bind(this));\n    }\n\n    /**\n     * Return the current active node.\n     *\n     * @return {Element|undefined} the active item if any\n     */\n    getActiveItem() {\n        const activeItem = this.treeRoot.data('activeItem');\n        if (activeItem) {\n            return getList(activeItem)[0];\n        }\n        return undefined;\n    }\n\n    /**\n     * Handle enter key on a collpasible node.\n     *\n     * @param {JQuery} jQueryItem the jQuery object\n     */\n    enterCallback(jQueryItem) {\n        const item = getList(jQueryItem)[0];\n        if (this.isGroupItem(jQueryItem)) {\n            // Group elements is like clicking a topic but without loosing the focus.\n            const enter = item.querySelector(this.selectors.ENTER);\n            if (enter.getAttribute('href') !== '#') {\n                window.location.href = enter.getAttribute('href');\n            }\n            enter.click();\n        } else {\n            // Activity links just follow the link href.\n            const link = item.querySelector('a');\n            if (link.getAttribute('href') !== '#') {\n                window.location.href = link.getAttribute('href');\n            } else {\n                link.click();\n            }\n            return;\n        }\n    }\n\n    /**\n     * Check if a gorup item is collapsed.\n     *\n     * @param {JQuery} jQueryItem  the jQuery object\n     * @returns {boolean} if the element is collapsed\n     */\n    isGroupCollapsed(jQueryItem) {\n        const item = getList(jQueryItem)[0];\n        const toggler = item.querySelector(`[aria-expanded]`);\n        return toggler.getAttribute('aria-expanded') === 'false';\n    }\n\n    /**\n     * Toggle a group item.\n     *\n     * @param {JQuery} item  the jQuery object\n     */\n    toggleGroup(item) {\n        // All jQuery in this segment of code can be replaced when MDL-79179 is integrated.\n        const toggler = item.find(this.selectors.COLLAPSE);\n        let collapsibleId = toggler.data('target') ?? toggler.attr('href');\n        if (!collapsibleId) {\n            return;\n        }\n        collapsibleId = collapsibleId.replace('#', '');\n\n        // Bootstrap 4 uses jQuery to interact with collapsibles.\n        const collapsible = jQuery(`#${collapsibleId}`);\n        if (collapsible.length) {\n            jQuery(`#${collapsibleId}`).collapse('toggle');\n        }\n    }\n\n    /**\n     * Expand a group item.\n     *\n     * @param {JQuery} item  the jQuery object\n     */\n    expandGroup(item) {\n        if (this.isGroupCollapsed(item)) {\n            this.toggleGroup(item);\n        }\n    }\n\n    /**\n     * Collpase a group item.\n     *\n     * @param {JQuery} item  the jQuery object\n     */\n    collapseGroup(item) {\n        if (!this.isGroupCollapsed(item)) {\n            this.toggleGroup(item);\n        }\n    }\n\n    /**\n     * Expand all groups.\n     */\n    expandAllGroups() {\n        const togglers = getList(this.treeRoot)[0].querySelectorAll(this.selectors.SECTION);\n        togglers.forEach(item => {\n            this.expandGroup(jQuery(item));\n        });\n    }\n}\n"],"file":"contenttree.min.js"}