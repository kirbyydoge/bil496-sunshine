{"version":3,"sources":["../src/lunr.js"],"names":["lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","call","build","version","utils","warn","global","message","console","asString","obj","toString","clone","Object","create","keys","i","length","key","val","Array","isArray","slice","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","s","n","indexOf","fieldRef","prototype","Set","elements","complete","intersect","other","union","contains","empty","object","a","b","intersection","element","push","concat","idf","posting","documentCount","documentsWithTerm","x","Math","log","abs","Token","str","metadata","update","fn","tokenizer","map","t","toLowerCase","len","tokens","sliceEnd","sliceStart","char","charAt","sliceLength","match","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","isRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","result","k","runString","token","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","step2list","step3list","re_mgr0","re_mgr1","re_1b_2","porterStemmer","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","insertionNode","substitutionNode","charA","charB","transposeNode","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","parser","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","matchingDocumentRef","matchingFieldRef","fieldMatch","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","fieldVector","score","docMatch","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","tf","scoreWithPrecision","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","name","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","factory","define","amd","exports","module"],"mappings":"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","sourcesContent":["/**\n * moodle readme\n *\n * Lunrjs can be downloaded from https://github.com/olivernn/lunr.js. To update this library get the lunr.js file\n * from this project and replace the content below with the new content.\n */\n\n/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n"],"file":"lunr.min.js"}