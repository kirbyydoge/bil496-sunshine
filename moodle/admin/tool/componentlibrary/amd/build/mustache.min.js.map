{"version":3,"sources":["../src/mustache.js"],"names":["renderTemplate","container","templateName","context","JSON","parse","e","Log","debug","Templates","renderForPromise","html","js","rendercontainer","querySelector","selectors","mustacherendered","replaceNodeContents","loadTemplate","sourcecontainer","mustachesource","contextcontainer","mustachecontext","dataset","template","mustacherawcontext","textContent","parts","split","component","shift","name","join","request","methodname","args","themename","Config","theme","includecomments","Ajax","call","done","source","example","match","precontainer","document","createElement","innerHTML","stringify","parentNode","appendChild","classList","add","fail","Notification","exception","mustache","querySelectorAll","mustachecode","forEach"],"mappings":"yQAuBA,OACA,OACA,OACA,OACA,OACA,O,qXAWMA,CAAAA,CAAc,4CAAG,WAAMC,CAAN,CAAiBC,CAAjB,CAA+BC,CAA/B,+FACnB,GAAI,CACAA,CAAO,CAAGC,IAAI,CAACC,KAAL,CAAWF,CAAX,CACb,CAAC,MAAOG,CAAP,CAAU,CACRC,UAAIC,KAAJ,CAAU,oDAAV,EACAD,UAAIC,KAAJ,CAAUF,CAAV,CACH,CANkB,eAQMG,WAAUC,gBAAV,CAA2BR,CAA3B,CAAyCC,CAAzC,CARN,iBAQZQ,CARY,GAQZA,IARY,CAQNC,CARM,GAQNA,EARM,CAUbC,CAVa,CAUKZ,CAAS,CAACa,aAAV,CAAwBC,UAAUC,gBAAlC,CAVL,gBAabP,WAAUQ,mBAAV,CAA8BJ,CAA9B,CAA+CF,CAA/C,CAAqDC,CAArD,CAba,yCAAH,uD,CAuBdM,CAAY,CAAG,SAAAjB,CAAS,CAAI,IACpBkB,CAAAA,CAAe,CAAGlB,CAAS,CAACa,aAAV,CAAwBC,UAAUK,cAAlC,CADE,CAEpBC,CAAgB,CAAGpB,CAAS,CAACa,aAAV,CAAwBC,UAAUO,eAAlC,CAFC,CAGpBpB,CAAY,CAAGD,CAAS,CAACsB,OAAV,CAAkBC,QAHb,CAItBrB,CAAO,CAAGF,CAAS,CAACa,aAAV,CAAwBC,UAAUU,kBAAlC,EAAsDC,WAJ1C,CAMpBC,CAAK,CAAGzB,CAAY,CAAC0B,KAAb,CAAmB,GAAnB,CANY,CAOpBC,CAAS,CAAGF,CAAK,CAACG,KAAN,EAPQ,CAQpBC,CAAI,CAAGJ,CAAK,CAACK,IAAN,CAAW,GAAX,CARa,CAUpBC,CAAO,CAAG,CACZC,UAAU,CAAE,2BADA,CAEZC,IAAI,CAAE,CACFN,SAAS,CAAEA,CADT,CAEFL,QAAQ,CAAEO,CAFR,CAGFK,SAAS,CAAEC,UAAOC,KAHhB,CAIFC,eAAe,GAJb,CAFM,CAVU,CAoB1BC,UAAKC,IAAL,CAAU,CAACR,CAAD,CAAV,EAAqB,CAArB,EACKS,IADL,CACU,SAACC,CAAD,CAAY,CAEdxB,CAAe,CAACO,WAAhB,CAA8BiB,CAA9B,CACA,GAAI,CAACxC,CAAL,CAAc,CACV,GAAMyC,CAAAA,CAAO,CAAGD,CAAM,CAACE,KAAP,CAAa,yCAAb,CAAhB,CACA1C,CAAO,CAAGyC,CAAO,CAAC,CAAD,CAAjB,CAEA,GAAME,CAAAA,CAAY,CAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAArB,CACAF,CAAY,CAACG,SAAb,CAAyB7C,IAAI,CAAC8C,SAAL,CAAe9C,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAf,CAAoC,IAApC,CAA0C,CAA1C,CAAzB,CACAkB,CAAgB,CAAC8B,UAAjB,CAA4BC,WAA5B,CAAwCN,CAAxC,EACAzB,CAAgB,CAACgC,SAAjB,CAA2BC,GAA3B,CAA+B,QAA/B,CACH,CACDtD,CAAc,CAACC,CAAD,CAAYC,CAAZ,CAA0BC,CAA1B,CACjB,CAdL,EAeKoD,IAfL,CAeUC,UAAaC,SAfvB,CAgBP,C,CAOYC,CAAQ,CAAG,UAAM,CAC1BX,QAAQ,CAACY,gBAAT,CAA0B5C,UAAU6C,YAApC,EAAkDC,OAAlD,CAA0D,SAAC5D,CAAD,CAAe,CACrEiB,CAAY,CAACjB,CAAD,CACf,CAFD,CAGH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Render mustache template examples within the component library.\n *\n * @module     tool_componentlibrary/mustache\n * @copyright  2021 Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport selectors from 'tool_componentlibrary/selectors';\nimport Ajax from 'core/ajax';\nimport Config from 'core/config';\nimport Templates from 'core/templates';\nimport Log from 'core/log';\nimport Notification from 'core/notification';\n\n/**\n * Handle a template loaded response.\n *\n * @method\n * @private\n * @param {String} container The template container\n * @param {String} templateName The template name\n * @param {String} context Data for the template.\n */\nconst renderTemplate = async(container, templateName, context) => {\n    try {\n        context = JSON.parse(context);\n    } catch (e) {\n        Log.debug('Could not parse json example context for template.');\n        Log.debug(e);\n    }\n\n    const {html, js} = await Templates.renderForPromise(templateName, context);\n\n    const rendercontainer = container.querySelector(selectors.mustacherendered);\n\n    // Load the rendered content in the renderer tab.\n    await Templates.replaceNodeContents(rendercontainer, html, js);\n};\n\n/**\n * Load the a template source from Moodle.\n *\n * @method\n * @private\n * @param {String} container The template container\n */\nconst loadTemplate = container => {\n        const sourcecontainer = container.querySelector(selectors.mustachesource);\n        const contextcontainer = container.querySelector(selectors.mustachecontext);\n        const templateName = container.dataset.template;\n        let context = container.querySelector(selectors.mustacherawcontext).textContent;\n\n        const parts = templateName.split('/');\n        const component = parts.shift();\n        const name = parts.join('/');\n\n        const request = {\n            methodname: 'core_output_load_template',\n            args: {\n                component: component,\n                template: name,\n                themename: Config.theme,\n                includecomments: true\n            }\n        };\n\n        Ajax.call([request])[0]\n            .done((source) => {\n                // Load the source template in Template tab.\n                sourcecontainer.textContent = source;\n                if (!context) {\n                    const example = source.match(/Example context \\(json\\):([\\s\\S]+?)(}})/);\n                    context = example[1];\n                    // Load the variables in the Variables tab.\n                    const precontainer = document.createElement(\"pre\");\n                    precontainer.innerHTML = JSON.stringify(JSON.parse(context), null, 4);\n                    contextcontainer.parentNode.appendChild(precontainer);\n                    contextcontainer.classList.add('d-none');\n                }\n                renderTemplate(container, templateName, context);\n            })\n            .fail(Notification.exception);\n};\n\n/**\n * Initialize the module.\n *\n * @method\n */\nexport const mustache = () => {\n    document.querySelectorAll(selectors.mustachecode).forEach((container) => {\n        loadTemplate(container);\n    });\n};\n"],"file":"mustache.min.js"}